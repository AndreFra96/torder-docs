{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"T-Order Developers Questa serie di documenti raccoglie tutte le informazioni dedicate agli sviluppatori interni di RCA SRL. Lo scopo di questi documenti \u00e8 quello di raccogliere gli aspetti tecnici dell'applicazione e lasciarne una traccia scritta per permettere la manutenibilit\u00e0 del progetto. T-Order \u00e8 un software studiato per sopperire alle necessit\u00e0 specifiche dell'azienda RCA SRL. Il Software permette di affiancare gli utenti in tutte le fasi di vendita di un prodotto o servizio, partendo dalla creazione di un preventivo da proporre al cliente fino all'eventuale gestione della fatturazione periodica. La versione 3 permette il completo utilizzo del servizio senza necessit\u00e0 di una parte di frontend, infatti \u00e8 stata studiata per essere completa e indipendente. T-Order si apre quindi fornendo una serie di endpoint per ottenere informazioni sullo stato attuale degli ordini e di tutto cio che ad essi \u00e8 collegato, per aggiungere nuove ordini e/o informazioni e per consentirne la modifica.","title":"T-Order Developers"},{"location":"#t-order-developers","text":"Questa serie di documenti raccoglie tutte le informazioni dedicate agli sviluppatori interni di RCA SRL. Lo scopo di questi documenti \u00e8 quello di raccogliere gli aspetti tecnici dell'applicazione e lasciarne una traccia scritta per permettere la manutenibilit\u00e0 del progetto. T-Order \u00e8 un software studiato per sopperire alle necessit\u00e0 specifiche dell'azienda RCA SRL. Il Software permette di affiancare gli utenti in tutte le fasi di vendita di un prodotto o servizio, partendo dalla creazione di un preventivo da proporre al cliente fino all'eventuale gestione della fatturazione periodica. La versione 3 permette il completo utilizzo del servizio senza necessit\u00e0 di una parte di frontend, infatti \u00e8 stata studiata per essere completa e indipendente. T-Order si apre quindi fornendo una serie di endpoint per ottenere informazioni sullo stato attuale degli ordini e di tutto cio che ad essi \u00e8 collegato, per aggiungere nuove ordini e/o informazioni e per consentirne la modifica.","title":"T-Order Developers"},{"location":"demo/","text":".md-typeset h1, .md-content__button { display: none; }","title":"Demo"},{"location":"esempi/","text":"Esempi richieste Di seguito alcuni esempi riguardanti gli endpoint principali delle API e del loro utilizzo. Login Username/Password Effettua il login con username e passord curl \"http://localhost:3000/api/login\" \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"username\":\"{username}\",\"password\":\"{password}\"}' Ordine Ottieni tutti Ottieni tutti gli ordini, questo endpoint va preferibilmente evitato poich\u00e8 molto lento. curl \"http://localhost:3000/api/ordine\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Ottieni in base all'id Ottieni uno specifico ordine in base al suo id curl \"http://localhost:3000/api/ordine/{id}\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Ottieni pagina Ottieni una pagina di ordini curl \"http://localhost:3000/api/ordine/pagina/{numero_pagina}\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Ottieni con Join Ottieni uno specifico ordine e il cliente associato in base all'id dell'ordine curl \"http://localhost:3000/api/ordine/{id}\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ -d '{\"options\":{\"include\":\"cliente_cliente\"}}' Matricole e Date di attivazione E' disponibile uno specifico endpoint per ottenere lo stato di inserimento di matricole e date di attivazione e uno per cancellare contemporaneamente tutte quelle legate ad uno specifico ordine Ottieni curl \"http://localhost:3000/api/ordine/{id}/serialActivation\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Cancella curl \"http://localhost:3000/api/ordine/{id}/serialActivation\" \\ -X DELETE \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Stato selezionabile E' disponibile uno specifico endpoint per sapere quali sono i possibili stati di destinazione dell'ordine. curl \"http://localhost:3000/api/ordine/{id}/availableStatus\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Modifica stato E' disponibile uno specifico endpoint per modificare lo stato di un ordine, utilizzando questo endpoint vengono effettuati i controlli e le azioni necessarie prima della modifica dello stato. curl \"http://localhost:3000/api/ordine/{id}/stato/{stato}\" \\ -X PUT \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Rinnovi Annuali Effettua rinnovo Avvia la conferma di un rinnovo curl \"http://localhost:3000/api/rinnovo/{id}/rinnova\" \\ -X PUT \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Totale per profilo Un'informazione utile, disponibile direttamente tramite uno specifico endpoint \u00e8 il totale dei rinnovi di un certo mese e anno raggruppati per profilo locale Richiesta: curl \"http://localhost:3000/api/rinnovo/totaleProfili/{mese}/{anno}\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Risposta: [ { \"descrizione\":\"descrizione_gruppo\", \"totale\":totale }, ... ]","title":"Esempi"},{"location":"esempi/#esempi-richieste","text":"Di seguito alcuni esempi riguardanti gli endpoint principali delle API e del loro utilizzo.","title":"Esempi richieste"},{"location":"esempi/#login","text":"","title":"Login"},{"location":"esempi/#usernamepassword","text":"Effettua il login con username e passord curl \"http://localhost:3000/api/login\" \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"username\":\"{username}\",\"password\":\"{password}\"}'","title":"Username/Password"},{"location":"esempi/#ordine","text":"","title":"Ordine"},{"location":"esempi/#ottieni-tutti","text":"Ottieni tutti gli ordini, questo endpoint va preferibilmente evitato poich\u00e8 molto lento. curl \"http://localhost:3000/api/ordine\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\","title":"Ottieni tutti"},{"location":"esempi/#ottieni-in-base-allid","text":"Ottieni uno specifico ordine in base al suo id curl \"http://localhost:3000/api/ordine/{id}\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\","title":"Ottieni in base all'id"},{"location":"esempi/#ottieni-pagina","text":"Ottieni una pagina di ordini curl \"http://localhost:3000/api/ordine/pagina/{numero_pagina}\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\","title":"Ottieni pagina"},{"location":"esempi/#ottieni-con-join","text":"Ottieni uno specifico ordine e il cliente associato in base all'id dell'ordine curl \"http://localhost:3000/api/ordine/{id}\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ -d '{\"options\":{\"include\":\"cliente_cliente\"}}'","title":"Ottieni con Join"},{"location":"esempi/#matricole-e-date-di-attivazione","text":"E' disponibile uno specifico endpoint per ottenere lo stato di inserimento di matricole e date di attivazione e uno per cancellare contemporaneamente tutte quelle legate ad uno specifico ordine","title":"Matricole e Date di attivazione"},{"location":"esempi/#ottieni","text":"curl \"http://localhost:3000/api/ordine/{id}/serialActivation\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\","title":"Ottieni"},{"location":"esempi/#cancella","text":"curl \"http://localhost:3000/api/ordine/{id}/serialActivation\" \\ -X DELETE \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\","title":"Cancella"},{"location":"esempi/#stato-selezionabile","text":"E' disponibile uno specifico endpoint per sapere quali sono i possibili stati di destinazione dell'ordine. curl \"http://localhost:3000/api/ordine/{id}/availableStatus\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\","title":"Stato selezionabile"},{"location":"esempi/#modifica-stato","text":"E' disponibile uno specifico endpoint per modificare lo stato di un ordine, utilizzando questo endpoint vengono effettuati i controlli e le azioni necessarie prima della modifica dello stato. curl \"http://localhost:3000/api/ordine/{id}/stato/{stato}\" \\ -X PUT \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\","title":"Modifica stato"},{"location":"esempi/#rinnovi-annuali","text":"","title":"Rinnovi Annuali"},{"location":"esempi/#effettua-rinnovo","text":"Avvia la conferma di un rinnovo curl \"http://localhost:3000/api/rinnovo/{id}/rinnova\" \\ -X PUT \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\","title":"Effettua rinnovo"},{"location":"esempi/#totale-per-profilo","text":"Un'informazione utile, disponibile direttamente tramite uno specifico endpoint \u00e8 il totale dei rinnovi di un certo mese e anno raggruppati per profilo locale Richiesta: curl \"http://localhost:3000/api/rinnovo/totaleProfili/{mese}/{anno}\" \\ -X GET \\ -H \"Content-Type: application/json\" \\ -H \"Authorization: Bearer {token}\" \\ Risposta: [ { \"descrizione\":\"descrizione_gruppo\", \"totale\":totale }, ... ]","title":"Totale per profilo"},{"location":"integrazioni/","text":"Integrazioni T-Order \u00e8 integrato direttamente con due software: Trace e E. Trace gestisce le anagrafiche dei clienti e il calendario degli interventi mentre E \u00e8 un programma di contabilit\u00e0 che si occupa di generare impegni e fatture. Trace \u2192 T-order Il passaggio di informazioni da Trace a T-order avviene tramite scrittura da parte di Trace nelle seguenti tabelle del database di T-Order (vecchio nome \u2192 nuovo nome): Clienti (t_customer \u2192 cliente) customer_id_trace \u2192 id_trace customer_ragsoc \u2192 ragsoc customer_indirizzo \u2192 via customer_cap \u2192 cap customer_city \u2192 citta customer_prov \u2192 provincia customer_piva \u2192 piva customer_codfisc \u2192 codfisc Locali (t_location \u2192 locale) location_loc_desc \u2192 nome location_address \u2192 via location_city \u2192 citta location_provincia \u2192 prov location_telephone \u2192 tel location_telephone1 \u2192 #ELIMINATO location_telephone2 \u2192 #ELIMINATO location_mail \u2192 mail Articoli (t_article \u2192 articolo) article_id_trace \u2192 id_trace article_title \u2192 title article_grp \u2192 gruppo cost_price \u2192 costo active \u2192 attivo import_trace \u2192 import_trace data_insert \u2192 data_insert data_update \u2192 data_update Gruppi Articoli (t_group \u2192 gruppo) group_loc_desc \u2192 descrizione group_id_trace \u2192 id_trace group_order \u2192 #ELIMINATO group_type_id \u2192 tipo_gruppo Prezzi (t_article_price \u2192 prezzo) cod_art \u2192 cod_art cod_listino \u2192 cod_listino prg_listino \u2192 prg_listino prz_listino \u2192 prz_listino data_insert \u2192 data_insert data_update \u2192 data_update t_trace: Nuovi articoli cliente T-order \u2192 Trace Trace legge da t_trace se date_import_trace \u00e8 null & tipo != 5 Se deleted = 1: (Disdetta) Effettua disdetta basata su trace_id Se id_trace non \u00e8 compilato: (Creazione) customer_id prg_location article_id serial_number installation_date due_date_maintenance Se id_trace \u00e8 compilato: (Modifica) customer_id prg_location article_id serial_number installation_date due_date_maintenance Trace legge z_trace_scaduti ?? E \u2192 T-order E scrive nelle tabelle: ex_insoluti ex_invoice ex_invoice_item ex_scaduti Metodi di pagamento (t_payment_esatto) E effettua modifiche: cambia stato ordine \u2192 impegno (ordine) ordine.order_id_esatto (numero impegno) ordine.is_billed (data_fatturazione) ordine.has_rid (appalto) ordine.rid_date ordine.invoice_nr (numero fattura) ordine.impegno_nr (numero impegno) ordine.invoice_id (id fattura) articolo_ordine.date_esatto (data import e) articolo_ordine.item_id_esatto (id item e) t_order_item_desc.date_import_e (data import e) t_order_item_desc.id_esatto (id e) cliente.id_trace (aggiorna cliente con id_trace) locale.prg (aggiorna locale con prg) T-order \u2192 E E legge da viste: e_order (unione di e_order_customer e e_order_customer_fb) e_order_item e_ratei e_rinnovi e_rinnovi_item e_rinnovi_item_desc t_contact La tabella t_contact \u00e8 direttamente condivisa fra Trace e T-Order e contiene i contatti dei clienti. Trace legge e scrive senza nostri id cliente/locale. Creazione nuovi clienti/locali: Procedura di generazione di nuovi clienti/locali a partire da T-Order: e legge vista preventivo con nuovo cliente/locale crea anagrafica cliente crea anagrafica locale aggiorna il nostro database con id cliente (via piva) aggiorna il nostro database con prg locale (locale senza prg con piva)","title":"Integrazioni"},{"location":"integrazioni/#integrazioni","text":"T-Order \u00e8 integrato direttamente con due software: Trace e E. Trace gestisce le anagrafiche dei clienti e il calendario degli interventi mentre E \u00e8 un programma di contabilit\u00e0 che si occupa di generare impegni e fatture.","title":"Integrazioni"},{"location":"integrazioni/#trace-t-order","text":"Il passaggio di informazioni da Trace a T-order avviene tramite scrittura da parte di Trace nelle seguenti tabelle del database di T-Order (vecchio nome \u2192 nuovo nome): Clienti (t_customer \u2192 cliente) customer_id_trace \u2192 id_trace customer_ragsoc \u2192 ragsoc customer_indirizzo \u2192 via customer_cap \u2192 cap customer_city \u2192 citta customer_prov \u2192 provincia customer_piva \u2192 piva customer_codfisc \u2192 codfisc Locali (t_location \u2192 locale) location_loc_desc \u2192 nome location_address \u2192 via location_city \u2192 citta location_provincia \u2192 prov location_telephone \u2192 tel location_telephone1 \u2192 #ELIMINATO location_telephone2 \u2192 #ELIMINATO location_mail \u2192 mail Articoli (t_article \u2192 articolo) article_id_trace \u2192 id_trace article_title \u2192 title article_grp \u2192 gruppo cost_price \u2192 costo active \u2192 attivo import_trace \u2192 import_trace data_insert \u2192 data_insert data_update \u2192 data_update Gruppi Articoli (t_group \u2192 gruppo) group_loc_desc \u2192 descrizione group_id_trace \u2192 id_trace group_order \u2192 #ELIMINATO group_type_id \u2192 tipo_gruppo Prezzi (t_article_price \u2192 prezzo) cod_art \u2192 cod_art cod_listino \u2192 cod_listino prg_listino \u2192 prg_listino prz_listino \u2192 prz_listino data_insert \u2192 data_insert data_update \u2192 data_update t_trace: Nuovi articoli cliente","title":"Trace \u2192 T-order"},{"location":"integrazioni/#t-order-trace","text":"Trace legge da t_trace se date_import_trace \u00e8 null & tipo != 5 Se deleted = 1: (Disdetta) Effettua disdetta basata su trace_id Se id_trace non \u00e8 compilato: (Creazione) customer_id prg_location article_id serial_number installation_date due_date_maintenance Se id_trace \u00e8 compilato: (Modifica) customer_id prg_location article_id serial_number installation_date due_date_maintenance Trace legge z_trace_scaduti ??","title":"T-order \u2192 Trace"},{"location":"integrazioni/#e-t-order","text":"E scrive nelle tabelle: ex_insoluti ex_invoice ex_invoice_item ex_scaduti Metodi di pagamento (t_payment_esatto) E effettua modifiche: cambia stato ordine \u2192 impegno (ordine) ordine.order_id_esatto (numero impegno) ordine.is_billed (data_fatturazione) ordine.has_rid (appalto) ordine.rid_date ordine.invoice_nr (numero fattura) ordine.impegno_nr (numero impegno) ordine.invoice_id (id fattura) articolo_ordine.date_esatto (data import e) articolo_ordine.item_id_esatto (id item e) t_order_item_desc.date_import_e (data import e) t_order_item_desc.id_esatto (id e) cliente.id_trace (aggiorna cliente con id_trace) locale.prg (aggiorna locale con prg)","title":"E \u2192 T-order"},{"location":"integrazioni/#t-order-e","text":"E legge da viste: e_order (unione di e_order_customer e e_order_customer_fb) e_order_item e_ratei e_rinnovi e_rinnovi_item e_rinnovi_item_desc","title":"T-order \u2192 E"},{"location":"integrazioni/#t_contact","text":"La tabella t_contact \u00e8 direttamente condivisa fra Trace e T-Order e contiene i contatti dei clienti. Trace legge e scrive senza nostri id cliente/locale.","title":"t_contact"},{"location":"integrazioni/#creazione-nuovi-clientilocali","text":"Procedura di generazione di nuovi clienti/locali a partire da T-Order: e legge vista preventivo con nuovo cliente/locale crea anagrafica cliente crea anagrafica locale aggiorna il nostro database con id cliente (via piva) aggiorna il nostro database con prg locale (locale senza prg con piva)","title":"Creazione nuovi clienti/locali:"},{"location":"architettura/","text":"Architettura I diagrammi inseriti in seguito hanno lo scopo di spiegare quali sono le diverse parti che compongono T-Order e in che modo comunicano fra di loro Componenti Il Seguente diagramma permette di visualizzare l'organizzazione dei diversi componenti e le vie di comunicazione Sequenza completa richiesta Questo diagramma mostra la sequenza completa di una qualsiasi operazione eseguita nel frontend che richieda l'interazione con il database. Sequenza backend Questo diagramma mostra quello che avviene all'interno del backend in seguito alla ricezione di una richiesta","title":"Architettura"},{"location":"architettura/#architettura","text":"I diagrammi inseriti in seguito hanno lo scopo di spiegare quali sono le diverse parti che compongono T-Order e in che modo comunicano fra di loro","title":"Architettura"},{"location":"architettura/#componenti","text":"Il Seguente diagramma permette di visualizzare l'organizzazione dei diversi componenti e le vie di comunicazione","title":"Componenti"},{"location":"architettura/#sequenza-completa-richiesta","text":"Questo diagramma mostra la sequenza completa di una qualsiasi operazione eseguita nel frontend che richieda l'interazione con il database.","title":"Sequenza completa richiesta"},{"location":"architettura/#sequenza-backend","text":"Questo diagramma mostra quello che avviene all'interno del backend in seguito alla ricezione di una richiesta","title":"Sequenza backend"},{"location":"architettura/frontend/","text":"Frontend","title":"Frontend"},{"location":"architettura/frontend/#frontend","text":"","title":"Frontend"},{"location":"architettura/sdk/","text":"Javascript SDK","title":"Javascript SDK"},{"location":"architettura/sdk/#javascript-sdk","text":"","title":"Javascript SDK"},{"location":"architettura/backend/","text":"Backend Il backend dell'applicazione \u00e8 un server NodeJs programmato con linguaggio Typescript su framework Express indipendenza Il backend \u00e8 il vero cuore dell'applicativo T-Order ed \u00e8 completamente indipendente dalla parte di frontend, il servizio \u00e8 completamente utilizzabile tramite chiamate al backend.","title":"Backend"},{"location":"architettura/backend/#backend","text":"Il backend dell'applicazione \u00e8 un server NodeJs programmato con linguaggio Typescript su framework Express indipendenza Il backend \u00e8 il vero cuore dell'applicativo T-Order ed \u00e8 completamente indipendente dalla parte di frontend, il servizio \u00e8 completamente utilizzabile tramite chiamate al backend.","title":"Backend"},{"location":"architettura/backend/struttura/","text":"Struttura src \u2523 @types \u2503 \u2523 express \u2503 \u2503 \u2517 index.d.ts \u2503 \u2523 ImportMensile.ts \u2503 \u2523 ImportRinnovo.ts \u2503 \u2523 OrderConfiguration.ts \u2503 \u2517 SerialActivation.ts \u2523 config \u2503 \u2523 cors.ts \u2503 \u2523 csp.ts \u2503 \u2523 fileUpload.ts \u2503 \u2523 morgan.ts \u2503 \u2523 sequelize.ts \u2503 \u2523 swagger.ts \u2503 \u2517 winston.ts \u2523 controllers \u2503 \u2523 ArticleChangeCtrl.ts \u2503 \u2523 ArticleParentCtrl.ts \u2503 \u2523 ArticoloClienteOrdineCtrl.ts \u2503 \u2523 ArticoloCtrl.ts \u2503 \u2523 ArticoloMensileCtrl.ts \u2503 \u2523 ArticoloOrdineCtrl.ts \u2503 \u2523 ArticoloPropostaCtrl.ts \u2503 \u2523 ArticoloRinnovoCtrl.ts \u2503 \u2523 ArticoloRinnovoStoricoCtrl.ts \u2503 \u2523 AttivazioneArticoloOrdineCtrl.ts \u2503 \u2523 CambioPianoCtrl.ts \u2503 \u2523 ClienteCtrl.ts \u2503 \u2523 ConfigurazioneMensileLocaleCtrl.ts \u2503 \u2523 ConfigurazioneRinnovoLocaleCtrl.ts \u2503 \u2523 ContattoCtrl.ts \u2503 \u2523 CostruttoreCtrl.ts \u2503 \u2523 DisdettaCtrl.ts \u2503 \u2523 GruppoCassaincloudCtrl.ts \u2503 \u2523 GruppoCtrl.ts \u2503 \u2523 LocaleCtrl.ts \u2503 \u2523 MacroTipoArticoloCtrl.ts \u2503 \u2523 MailCtrl.ts \u2503 \u2523 MatricolaArticoloOrdineCtrl.ts \u2503 \u2523 MensileCtrl.ts \u2503 \u2523 MotivazioneCtrl.ts \u2503 \u2523 NumbersCtrl.ts \u2503 \u2523 OrdineCtrl.ts \u2503 \u2523 PDFCtrl.ts \u2503 \u2523 PagamentoMensileCtrl.ts \u2503 \u2523 PrezzoCtrl.ts \u2503 \u2523 ProfiloContattoCtrl.ts \u2503 \u2523 ProfiloLocaleCtrl.ts \u2503 \u2523 PropostaCtrl.ts \u2503 \u2523 RepartoCtrl.ts \u2503 \u2523 RinnovoCtrl.ts \u2503 \u2523 StatoCtrl.ts \u2503 \u2523 TPaymentEsattoCtrl.ts \u2503 \u2523 TTraceCtrl.ts \u2503 \u2523 TipoArticoloCtrl.ts \u2503 \u2523 TipoFatturazioneCtrl.ts \u2503 \u2523 TipoGruppoCtrl.ts \u2503 \u2523 TipoOrdineCtrl.ts \u2503 \u2517 UtenteCtrl.ts \u2523 crons \u2503 \u2523 import_mensili_cron.ts \u2503 \u2517 import_rinnovi_cron.ts \u2523 images \u2503 \u2523 .DS_Store \u2503 \u2523 logo_rca.png \u2503 \u2523 placeholder.png \u2503 \u2517 placeholder_black.png \u2523 logs \u2503 \u2523 debug \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 error \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 http \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 info \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 mail \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 sequelize \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 socket \u2503 \u2503 \u2523 percentuale.log \u2503 \u2503 \u2517 report.log \u2503 \u2517 .DS_Store \u2523 middlewares \u2503 \u2523 editStatusCheck.middleware.ts \u2503 \u2523 extractOptions.middleware.ts \u2503 \u2523 jwt.auth.ts \u2503 \u2523 privilegiOrdineUtente.middleware.ts \u2503 \u2517 sequelizeMapping.middleware.ts \u2523 models \u2503 \u2523 article_change.ts \u2503 \u2523 article_parent.ts \u2503 \u2523 articolo.ts \u2503 \u2523 articolo_cliente_ordine.ts \u2503 \u2523 articolo_mensile.ts \u2503 \u2523 articolo_ordine.ts \u2503 \u2523 articolo_proposta.ts \u2503 \u2523 articolo_rinnovo.ts \u2503 \u2523 articolo_rinnovo_storico.ts \u2503 \u2523 attivazione_articolo_ordine.ts \u2503 \u2523 cambio_piano.ts \u2503 \u2523 cliente.ts \u2503 \u2523 configurazione_mensile_locale.ts \u2503 \u2523 configurazione_rinnovo_locale.ts \u2503 \u2523 contatto.ts \u2503 \u2523 costruttore.ts \u2503 \u2523 disdetta.ts \u2503 \u2523 gruppo.ts \u2503 \u2523 gruppo_cassaincloud.ts \u2503 \u2523 init-models.ts \u2503 \u2523 locale.ts \u2503 \u2523 macro_tipo_articolo.ts \u2503 \u2523 matricola_articolo_ordine.ts \u2503 \u2523 mensile.ts \u2503 \u2523 motivazione.ts \u2503 \u2523 numbers.ts \u2503 \u2523 ordine.ts \u2503 \u2523 pagamento_mensile.ts \u2503 \u2523 prezzo.ts \u2503 \u2523 profilo_contatto.ts \u2503 \u2523 profilo_locale.ts \u2503 \u2523 proposta.ts \u2503 \u2523 reparto.ts \u2503 \u2523 rinnovo.ts \u2503 \u2523 stato.ts \u2503 \u2523 t_payment_esatto.ts \u2503 \u2523 t_trace.ts \u2503 \u2523 tipo_articolo.ts \u2503 \u2523 tipo_fatturazione.ts \u2503 \u2523 tipo_gruppo.ts \u2503 \u2523 tipo_ordine.ts \u2503 \u2517 utente.ts \u2523 pre-start \u2503 \u2523 env \u2503 \u2503 \u2523 development.env \u2503 \u2503 \u2523 production.env \u2503 \u2503 \u2517 test.env \u2503 \u2517 index.ts \u2523 public \u2503 \u2523 docs \u2503 \u2523 frontend \u2503 \u2503 \u2523 css \u2503 \u2503 \u2503 \u2523 app.5b757f3b.css \u2503 \u2503 \u2503 \u2517 chunk-vendors.aaf76455.css \u2503 \u2503 \u2523 js \u2503 \u2503 \u2503 \u2523 app.477e768d.js \u2503 \u2503 \u2503 \u2523 app.477e768d.js.map \u2503 \u2503 \u2503 \u2523 chunk-vendors.aa68b2bd.js \u2503 \u2503 \u2503 \u2517 chunk-vendors.aa68b2bd.js.map \u2503 \u2503 \u2523 vendors \u2503 \u2503 \u2503 \u2517 bootstrap.bundle.min.js \u2503 \u2503 \u2523 custom.css \u2503 \u2503 \u2523 favicon.ico \u2503 \u2503 \u2523 index.html \u2503 \u2503 \u2523 logo.png \u2503 \u2503 \u2523 t-order.svg \u2503 \u2503 \u2517 torder_logo.png \u2503 \u2523 scripts \u2503 \u2503 \u2523 init_guest_home.js \u2503 \u2503 \u2517 redoc.standalone.js \u2503 \u2517 openapi.json \u2523 repositories \u2503 \u2523 ArticleChangeRepo.ts \u2503 \u2523 ArticleParentRepo.ts \u2503 \u2523 ArticoloClienteOrdineRepo.ts \u2503 \u2523 ArticoloMensileRepo.ts \u2503 \u2523 ArticoloOrdineRepo.ts \u2503 \u2523 ArticoloPropostaRepo.ts \u2503 \u2523 ArticoloRepo.ts \u2503 \u2523 ArticoloRinnovoRepo.ts \u2503 \u2523 ArticoloRinnovoStoricoRepo.ts \u2503 \u2523 AttivazioneArticoloOrdineRepo.ts \u2503 \u2523 CambioPianoRepo.ts \u2503 \u2523 ClienteRepo.ts \u2503 \u2523 ConfigurazioneMensileLocaleRepo.ts \u2503 \u2523 ConfigurazioneRinnovoLocaleRepo.ts \u2503 \u2523 ContattoRepo.ts \u2503 \u2523 CostruttoreRepo.ts \u2503 \u2523 DisdettaRepo.ts \u2503 \u2523 GruppoCassaincloudRepo.ts \u2503 \u2523 GruppoRepo.ts \u2503 \u2523 LocaleRepo.ts \u2503 \u2523 MacroTipoArticoloRepo.ts \u2503 \u2523 MatricolaArticoloOrdineRepo.ts \u2503 \u2523 MensileRepo.ts \u2503 \u2523 MotivazioneRepo.ts \u2503 \u2523 NumbersRepo.ts \u2503 \u2523 OrdineRepo.ts \u2503 \u2523 PagamentoMensileRepo.ts \u2503 \u2523 PrezzoRepo.ts \u2503 \u2523 ProfiloContattoRepo.ts \u2503 \u2523 ProfiloLocaleRepo.ts \u2503 \u2523 PropostaRepo.ts \u2503 \u2523 RepartoRepo.ts \u2503 \u2523 RinnovoRepo.ts \u2503 \u2523 StatoRepo.ts \u2503 \u2523 TPaymentEsattoRepo.ts \u2503 \u2523 TipoArticoloRepo.ts \u2503 \u2523 TipoFatturazioneRepo.ts \u2503 \u2523 TipoGruppoRepo.ts \u2503 \u2523 TipoOrdineRepo.ts \u2503 \u2523 TraceRepo.ts \u2503 \u2517 UtenteRepo.ts \u2523 routes \u2503 \u2523 AccessToken.route.ts \u2503 \u2523 ArticleChange.route.ts \u2503 \u2523 ArticleParent.route.ts \u2503 \u2523 Articolo.route.ts \u2503 \u2523 ArticoloClienteOrdine.route.ts \u2503 \u2523 ArticoloMensile.route.ts \u2503 \u2523 ArticoloOrdine.route.ts \u2503 \u2523 ArticoloProposta.route.ts \u2503 \u2523 ArticoloRinnovo.route.ts \u2503 \u2523 ArticoloRinnovoStorico.route.ts \u2503 \u2523 AttivazioneArticoloOrdine.route.ts \u2503 \u2523 CambioPiano.route.ts \u2503 \u2523 Cliente.route.ts \u2503 \u2523 ConfigurazioneMensileLocale.route.ts \u2503 \u2523 ConfigurazioneRinnovoLocale.route.ts \u2503 \u2523 Contatto.route.ts \u2503 \u2523 Costruttore.route.ts \u2503 \u2523 Disdetta.route.ts \u2503 \u2523 File.route.ts \u2503 \u2523 Gruppo.route.ts \u2503 \u2523 GruppoCassaincloud.route.ts \u2503 \u2523 Guest.route.ts \u2503 \u2523 Locale.route.ts \u2503 \u2523 Logs.route.ts \u2503 \u2523 MacroTipoArticolo.route.ts \u2503 \u2523 Mail.route.ts \u2503 \u2523 MatricolaArticoloOrdine.route.ts \u2503 \u2523 Mensile.route.ts \u2503 \u2523 Motivazione.route.ts \u2503 \u2523 Numbers.route.ts \u2503 \u2523 Ordine.route.ts \u2503 \u2523 PDF.route.ts \u2503 \u2523 PagamentoMensile.route.ts \u2503 \u2523 Prezzo.route.ts \u2503 \u2523 ProfiloContatto.route.ts \u2503 \u2523 ProfiloLocale.route.ts \u2503 \u2523 Proposta.route.ts \u2503 \u2523 Reparto.route.ts \u2503 \u2523 Rinnovo.route.ts \u2503 \u2523 Stato.route.ts \u2503 \u2523 TPaymentEsatto.route.ts \u2503 \u2523 Test.route.ts \u2503 \u2523 TipoArticolo.route.ts \u2503 \u2523 TipoFatturazione.route.ts \u2503 \u2523 TipoGruppo.route.ts \u2503 \u2523 TipoOrdine.route.ts \u2503 \u2523 Trace.route.ts \u2503 \u2523 Utente.route.ts \u2503 \u2517 index.ts \u2523 services \u2503 \u2523 Auth0Mangement.service.ts \u2503 \u2523 Encrypt.service.ts \u2503 \u2523 FileManager.service.ts \u2503 \u2523 Mailing.service.ts \u2503 \u2523 PDFGenerator.service.ts \u2503 \u2523 QrCodeGenerator.service.ts \u2503 \u2517 Telegram.service.ts \u2523 shared \u2503 \u2523 api_error_handler.ts \u2503 \u2523 constants.ts \u2503 \u2523 fillTemplate.ts \u2503 \u2523 functions.ts \u2503 \u2523 hashCode.ts \u2503 \u2523 sqlize_models_mapping.ts \u2503 \u2517 sqlize_op_mapping.ts \u2523 sockets \u2503 \u2523 main.socket.ts \u2503 \u2517 watch.approach.socket.ts \u2523 templates \u2503 \u2523 order.template.html \u2503 \u2523 ordine_rinnovo.template.html \u2503 \u2517 preventivo.template.html \u2523 uploads \u2503 \u2523 ordini \u2503 \u2503 \u2523 12418 \u2503 \u2503 \u2523 12863 \u2503 \u2503 \u2523 12934 \u2503 \u2503 \u2523 12938 \u2503 \u2503 \u2523 12939 \u2503 \u2503 \u2503 \u2517 docs2.html \u2503 \u2503 \u2523 12944 \u2503 \u2503 \u2523 12952 \u2503 \u2503 \u2517 .DS_Store \u2503 \u2523 temp \u2503 \u2503 \u2523 1650466151379 \u2503 \u2503 \u2503 \u2517 R-24187.pdf \u2503 \u2503 \u2523 1650791825997 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650811644623 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650811712608 \u2503 \u2503 \u2503 \u2517 O-12941.pdf \u2503 \u2503 \u2523 1650833591425 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650842440375 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650842547460 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650842763732 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650842825178 \u2503 \u2503 \u2503 \u2517 R-24245.pdf \u2503 \u2503 \u2523 1650842853416 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650878554880 \u2503 \u2503 \u2503 \u2517 R-24245.pdf \u2503 \u2503 \u2523 1650885652306 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650885880065 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650885947963 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1651578136585 \u2503 \u2503 \u2503 \u2517 R-24194.pdf \u2503 \u2503 \u2523 1651653452992 \u2503 \u2503 \u2503 \u2517 O-12952.pdf \u2503 \u2503 \u2523 1651661753954 \u2503 \u2503 \u2503 \u2517 R-24194.pdf \u2503 \u2503 \u2523 1651670766678 \u2503 \u2503 \u2503 \u2517 O-12951.pdf \u2503 \u2503 \u2523 1651670773724 \u2503 \u2503 \u2503 \u2517 R-24194.pdf \u2503 \u2503 \u2523 1652124450182 \u2503 \u2503 \u2503 \u2517 R-26045.pdf \u2503 \u2503 \u2523 1652195941204 \u2503 \u2503 \u2503 \u2517 R-25298.pdf \u2503 \u2503 \u2523 1652197890419 \u2503 \u2503 \u2503 \u2517 R-25310.pdf \u2503 \u2503 \u2523 1652969139256 \u2503 \u2503 \u2503 \u2517 O-13016.pdf \u2503 \u2503 \u2523 1654504012914 \u2503 \u2503 \u2503 \u2517 R-39321.pdf \u2503 \u2503 \u2517 1654505224913 \u2503 \u2503 \u2503 \u2517 R-39321.pdf \u2503 \u2517 .DS_Store \u2523 validators \u2503 \u2523 ArticleChangeValidator.ts \u2503 \u2523 ArticleParentValidator.ts \u2503 \u2523 ArticoloClienteOrdineValidator.ts \u2503 \u2523 ArticoloMensileValidator.ts \u2503 \u2523 ArticoloOrdineValidator.ts \u2503 \u2523 ArticoloPropostaValidator.ts \u2503 \u2523 ArticoloRinnovoStoricoValidator.ts \u2503 \u2523 ArticoloRinnovoValidator.ts \u2503 \u2523 ArticoloValidator.ts \u2503 \u2523 AttivazioneArticoloOrdineValidator.ts \u2503 \u2523 CambioPianoValidator.ts \u2503 \u2523 ClienteValidator.ts \u2503 \u2523 ConfigurazioneMensileLocaleValidator.ts \u2503 \u2523 ConfigurazioneRinnovoLocaleValidator.ts \u2503 \u2523 ContattoValidator.ts \u2503 \u2523 CostruttoreValidator.ts \u2503 \u2523 DisdettaValidator.ts \u2503 \u2523 GruppoCassaincloudValidator.ts \u2503 \u2523 GruppoValidator.ts \u2503 \u2523 LocaleValidator.ts \u2503 \u2523 MacroTipoArticoloValidator.ts \u2503 \u2523 MailValidator.ts \u2503 \u2523 MatricolaArticoloOrdineValidator.ts \u2503 \u2523 MensileValidator.ts \u2503 \u2523 MotivazioneValidator.ts \u2503 \u2523 NumbersValidator.ts \u2503 \u2523 OrdineValidator.ts \u2503 \u2523 PagamentoMensileValidator.ts \u2503 \u2523 PrezzoValidator.ts \u2503 \u2523 ProfiloContattoValidator.ts \u2503 \u2523 ProfiloLocaleValidator.ts \u2503 \u2523 PropostaValidator.ts \u2503 \u2523 RepartoValidator.ts \u2503 \u2523 RinnovoValidator.ts \u2503 \u2523 StatoValidator.ts \u2503 \u2523 TPaymentEsattoValidator.ts \u2503 \u2523 TTraceValidator.ts \u2503 \u2523 TipoArticoloValidator.ts \u2503 \u2523 TipoFatturazioneValidator.ts \u2503 \u2523 TipoGruppoValidator.ts \u2503 \u2523 TipoOrdineValidator.ts \u2503 \u2517 UtenteValidator.ts \u2523 views \u2503 \u2523 guest.ejs \u2503 \u2517 redoc_docs.ejs \u2523 .DS_Store \u2523 Server.ts \u2523 cluster.ts \u2517 index.ts","title":"Struttura"},{"location":"architettura/backend/struttura/#struttura","text":"src \u2523 @types \u2503 \u2523 express \u2503 \u2503 \u2517 index.d.ts \u2503 \u2523 ImportMensile.ts \u2503 \u2523 ImportRinnovo.ts \u2503 \u2523 OrderConfiguration.ts \u2503 \u2517 SerialActivation.ts \u2523 config \u2503 \u2523 cors.ts \u2503 \u2523 csp.ts \u2503 \u2523 fileUpload.ts \u2503 \u2523 morgan.ts \u2503 \u2523 sequelize.ts \u2503 \u2523 swagger.ts \u2503 \u2517 winston.ts \u2523 controllers \u2503 \u2523 ArticleChangeCtrl.ts \u2503 \u2523 ArticleParentCtrl.ts \u2503 \u2523 ArticoloClienteOrdineCtrl.ts \u2503 \u2523 ArticoloCtrl.ts \u2503 \u2523 ArticoloMensileCtrl.ts \u2503 \u2523 ArticoloOrdineCtrl.ts \u2503 \u2523 ArticoloPropostaCtrl.ts \u2503 \u2523 ArticoloRinnovoCtrl.ts \u2503 \u2523 ArticoloRinnovoStoricoCtrl.ts \u2503 \u2523 AttivazioneArticoloOrdineCtrl.ts \u2503 \u2523 CambioPianoCtrl.ts \u2503 \u2523 ClienteCtrl.ts \u2503 \u2523 ConfigurazioneMensileLocaleCtrl.ts \u2503 \u2523 ConfigurazioneRinnovoLocaleCtrl.ts \u2503 \u2523 ContattoCtrl.ts \u2503 \u2523 CostruttoreCtrl.ts \u2503 \u2523 DisdettaCtrl.ts \u2503 \u2523 GruppoCassaincloudCtrl.ts \u2503 \u2523 GruppoCtrl.ts \u2503 \u2523 LocaleCtrl.ts \u2503 \u2523 MacroTipoArticoloCtrl.ts \u2503 \u2523 MailCtrl.ts \u2503 \u2523 MatricolaArticoloOrdineCtrl.ts \u2503 \u2523 MensileCtrl.ts \u2503 \u2523 MotivazioneCtrl.ts \u2503 \u2523 NumbersCtrl.ts \u2503 \u2523 OrdineCtrl.ts \u2503 \u2523 PDFCtrl.ts \u2503 \u2523 PagamentoMensileCtrl.ts \u2503 \u2523 PrezzoCtrl.ts \u2503 \u2523 ProfiloContattoCtrl.ts \u2503 \u2523 ProfiloLocaleCtrl.ts \u2503 \u2523 PropostaCtrl.ts \u2503 \u2523 RepartoCtrl.ts \u2503 \u2523 RinnovoCtrl.ts \u2503 \u2523 StatoCtrl.ts \u2503 \u2523 TPaymentEsattoCtrl.ts \u2503 \u2523 TTraceCtrl.ts \u2503 \u2523 TipoArticoloCtrl.ts \u2503 \u2523 TipoFatturazioneCtrl.ts \u2503 \u2523 TipoGruppoCtrl.ts \u2503 \u2523 TipoOrdineCtrl.ts \u2503 \u2517 UtenteCtrl.ts \u2523 crons \u2503 \u2523 import_mensili_cron.ts \u2503 \u2517 import_rinnovi_cron.ts \u2523 images \u2503 \u2523 .DS_Store \u2503 \u2523 logo_rca.png \u2503 \u2523 placeholder.png \u2503 \u2517 placeholder_black.png \u2523 logs \u2503 \u2523 debug \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 error \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 http \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 info \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 mail \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 sequelize \u2503 \u2503 \u2517 YYYY-MM-DD.log \u2503 \u2523 socket \u2503 \u2503 \u2523 percentuale.log \u2503 \u2503 \u2517 report.log \u2503 \u2517 .DS_Store \u2523 middlewares \u2503 \u2523 editStatusCheck.middleware.ts \u2503 \u2523 extractOptions.middleware.ts \u2503 \u2523 jwt.auth.ts \u2503 \u2523 privilegiOrdineUtente.middleware.ts \u2503 \u2517 sequelizeMapping.middleware.ts \u2523 models \u2503 \u2523 article_change.ts \u2503 \u2523 article_parent.ts \u2503 \u2523 articolo.ts \u2503 \u2523 articolo_cliente_ordine.ts \u2503 \u2523 articolo_mensile.ts \u2503 \u2523 articolo_ordine.ts \u2503 \u2523 articolo_proposta.ts \u2503 \u2523 articolo_rinnovo.ts \u2503 \u2523 articolo_rinnovo_storico.ts \u2503 \u2523 attivazione_articolo_ordine.ts \u2503 \u2523 cambio_piano.ts \u2503 \u2523 cliente.ts \u2503 \u2523 configurazione_mensile_locale.ts \u2503 \u2523 configurazione_rinnovo_locale.ts \u2503 \u2523 contatto.ts \u2503 \u2523 costruttore.ts \u2503 \u2523 disdetta.ts \u2503 \u2523 gruppo.ts \u2503 \u2523 gruppo_cassaincloud.ts \u2503 \u2523 init-models.ts \u2503 \u2523 locale.ts \u2503 \u2523 macro_tipo_articolo.ts \u2503 \u2523 matricola_articolo_ordine.ts \u2503 \u2523 mensile.ts \u2503 \u2523 motivazione.ts \u2503 \u2523 numbers.ts \u2503 \u2523 ordine.ts \u2503 \u2523 pagamento_mensile.ts \u2503 \u2523 prezzo.ts \u2503 \u2523 profilo_contatto.ts \u2503 \u2523 profilo_locale.ts \u2503 \u2523 proposta.ts \u2503 \u2523 reparto.ts \u2503 \u2523 rinnovo.ts \u2503 \u2523 stato.ts \u2503 \u2523 t_payment_esatto.ts \u2503 \u2523 t_trace.ts \u2503 \u2523 tipo_articolo.ts \u2503 \u2523 tipo_fatturazione.ts \u2503 \u2523 tipo_gruppo.ts \u2503 \u2523 tipo_ordine.ts \u2503 \u2517 utente.ts \u2523 pre-start \u2503 \u2523 env \u2503 \u2503 \u2523 development.env \u2503 \u2503 \u2523 production.env \u2503 \u2503 \u2517 test.env \u2503 \u2517 index.ts \u2523 public \u2503 \u2523 docs \u2503 \u2523 frontend \u2503 \u2503 \u2523 css \u2503 \u2503 \u2503 \u2523 app.5b757f3b.css \u2503 \u2503 \u2503 \u2517 chunk-vendors.aaf76455.css \u2503 \u2503 \u2523 js \u2503 \u2503 \u2503 \u2523 app.477e768d.js \u2503 \u2503 \u2503 \u2523 app.477e768d.js.map \u2503 \u2503 \u2503 \u2523 chunk-vendors.aa68b2bd.js \u2503 \u2503 \u2503 \u2517 chunk-vendors.aa68b2bd.js.map \u2503 \u2503 \u2523 vendors \u2503 \u2503 \u2503 \u2517 bootstrap.bundle.min.js \u2503 \u2503 \u2523 custom.css \u2503 \u2503 \u2523 favicon.ico \u2503 \u2503 \u2523 index.html \u2503 \u2503 \u2523 logo.png \u2503 \u2503 \u2523 t-order.svg \u2503 \u2503 \u2517 torder_logo.png \u2503 \u2523 scripts \u2503 \u2503 \u2523 init_guest_home.js \u2503 \u2503 \u2517 redoc.standalone.js \u2503 \u2517 openapi.json \u2523 repositories \u2503 \u2523 ArticleChangeRepo.ts \u2503 \u2523 ArticleParentRepo.ts \u2503 \u2523 ArticoloClienteOrdineRepo.ts \u2503 \u2523 ArticoloMensileRepo.ts \u2503 \u2523 ArticoloOrdineRepo.ts \u2503 \u2523 ArticoloPropostaRepo.ts \u2503 \u2523 ArticoloRepo.ts \u2503 \u2523 ArticoloRinnovoRepo.ts \u2503 \u2523 ArticoloRinnovoStoricoRepo.ts \u2503 \u2523 AttivazioneArticoloOrdineRepo.ts \u2503 \u2523 CambioPianoRepo.ts \u2503 \u2523 ClienteRepo.ts \u2503 \u2523 ConfigurazioneMensileLocaleRepo.ts \u2503 \u2523 ConfigurazioneRinnovoLocaleRepo.ts \u2503 \u2523 ContattoRepo.ts \u2503 \u2523 CostruttoreRepo.ts \u2503 \u2523 DisdettaRepo.ts \u2503 \u2523 GruppoCassaincloudRepo.ts \u2503 \u2523 GruppoRepo.ts \u2503 \u2523 LocaleRepo.ts \u2503 \u2523 MacroTipoArticoloRepo.ts \u2503 \u2523 MatricolaArticoloOrdineRepo.ts \u2503 \u2523 MensileRepo.ts \u2503 \u2523 MotivazioneRepo.ts \u2503 \u2523 NumbersRepo.ts \u2503 \u2523 OrdineRepo.ts \u2503 \u2523 PagamentoMensileRepo.ts \u2503 \u2523 PrezzoRepo.ts \u2503 \u2523 ProfiloContattoRepo.ts \u2503 \u2523 ProfiloLocaleRepo.ts \u2503 \u2523 PropostaRepo.ts \u2503 \u2523 RepartoRepo.ts \u2503 \u2523 RinnovoRepo.ts \u2503 \u2523 StatoRepo.ts \u2503 \u2523 TPaymentEsattoRepo.ts \u2503 \u2523 TipoArticoloRepo.ts \u2503 \u2523 TipoFatturazioneRepo.ts \u2503 \u2523 TipoGruppoRepo.ts \u2503 \u2523 TipoOrdineRepo.ts \u2503 \u2523 TraceRepo.ts \u2503 \u2517 UtenteRepo.ts \u2523 routes \u2503 \u2523 AccessToken.route.ts \u2503 \u2523 ArticleChange.route.ts \u2503 \u2523 ArticleParent.route.ts \u2503 \u2523 Articolo.route.ts \u2503 \u2523 ArticoloClienteOrdine.route.ts \u2503 \u2523 ArticoloMensile.route.ts \u2503 \u2523 ArticoloOrdine.route.ts \u2503 \u2523 ArticoloProposta.route.ts \u2503 \u2523 ArticoloRinnovo.route.ts \u2503 \u2523 ArticoloRinnovoStorico.route.ts \u2503 \u2523 AttivazioneArticoloOrdine.route.ts \u2503 \u2523 CambioPiano.route.ts \u2503 \u2523 Cliente.route.ts \u2503 \u2523 ConfigurazioneMensileLocale.route.ts \u2503 \u2523 ConfigurazioneRinnovoLocale.route.ts \u2503 \u2523 Contatto.route.ts \u2503 \u2523 Costruttore.route.ts \u2503 \u2523 Disdetta.route.ts \u2503 \u2523 File.route.ts \u2503 \u2523 Gruppo.route.ts \u2503 \u2523 GruppoCassaincloud.route.ts \u2503 \u2523 Guest.route.ts \u2503 \u2523 Locale.route.ts \u2503 \u2523 Logs.route.ts \u2503 \u2523 MacroTipoArticolo.route.ts \u2503 \u2523 Mail.route.ts \u2503 \u2523 MatricolaArticoloOrdine.route.ts \u2503 \u2523 Mensile.route.ts \u2503 \u2523 Motivazione.route.ts \u2503 \u2523 Numbers.route.ts \u2503 \u2523 Ordine.route.ts \u2503 \u2523 PDF.route.ts \u2503 \u2523 PagamentoMensile.route.ts \u2503 \u2523 Prezzo.route.ts \u2503 \u2523 ProfiloContatto.route.ts \u2503 \u2523 ProfiloLocale.route.ts \u2503 \u2523 Proposta.route.ts \u2503 \u2523 Reparto.route.ts \u2503 \u2523 Rinnovo.route.ts \u2503 \u2523 Stato.route.ts \u2503 \u2523 TPaymentEsatto.route.ts \u2503 \u2523 Test.route.ts \u2503 \u2523 TipoArticolo.route.ts \u2503 \u2523 TipoFatturazione.route.ts \u2503 \u2523 TipoGruppo.route.ts \u2503 \u2523 TipoOrdine.route.ts \u2503 \u2523 Trace.route.ts \u2503 \u2523 Utente.route.ts \u2503 \u2517 index.ts \u2523 services \u2503 \u2523 Auth0Mangement.service.ts \u2503 \u2523 Encrypt.service.ts \u2503 \u2523 FileManager.service.ts \u2503 \u2523 Mailing.service.ts \u2503 \u2523 PDFGenerator.service.ts \u2503 \u2523 QrCodeGenerator.service.ts \u2503 \u2517 Telegram.service.ts \u2523 shared \u2503 \u2523 api_error_handler.ts \u2503 \u2523 constants.ts \u2503 \u2523 fillTemplate.ts \u2503 \u2523 functions.ts \u2503 \u2523 hashCode.ts \u2503 \u2523 sqlize_models_mapping.ts \u2503 \u2517 sqlize_op_mapping.ts \u2523 sockets \u2503 \u2523 main.socket.ts \u2503 \u2517 watch.approach.socket.ts \u2523 templates \u2503 \u2523 order.template.html \u2503 \u2523 ordine_rinnovo.template.html \u2503 \u2517 preventivo.template.html \u2523 uploads \u2503 \u2523 ordini \u2503 \u2503 \u2523 12418 \u2503 \u2503 \u2523 12863 \u2503 \u2503 \u2523 12934 \u2503 \u2503 \u2523 12938 \u2503 \u2503 \u2523 12939 \u2503 \u2503 \u2503 \u2517 docs2.html \u2503 \u2503 \u2523 12944 \u2503 \u2503 \u2523 12952 \u2503 \u2503 \u2517 .DS_Store \u2503 \u2523 temp \u2503 \u2503 \u2523 1650466151379 \u2503 \u2503 \u2503 \u2517 R-24187.pdf \u2503 \u2503 \u2523 1650791825997 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650811644623 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650811712608 \u2503 \u2503 \u2503 \u2517 O-12941.pdf \u2503 \u2503 \u2523 1650833591425 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650842440375 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650842547460 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650842763732 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650842825178 \u2503 \u2503 \u2503 \u2517 R-24245.pdf \u2503 \u2503 \u2523 1650842853416 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650878554880 \u2503 \u2503 \u2503 \u2517 R-24245.pdf \u2503 \u2503 \u2523 1650885652306 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650885880065 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1650885947963 \u2503 \u2503 \u2503 \u2517 O-12944.pdf \u2503 \u2503 \u2523 1651578136585 \u2503 \u2503 \u2503 \u2517 R-24194.pdf \u2503 \u2503 \u2523 1651653452992 \u2503 \u2503 \u2503 \u2517 O-12952.pdf \u2503 \u2503 \u2523 1651661753954 \u2503 \u2503 \u2503 \u2517 R-24194.pdf \u2503 \u2503 \u2523 1651670766678 \u2503 \u2503 \u2503 \u2517 O-12951.pdf \u2503 \u2503 \u2523 1651670773724 \u2503 \u2503 \u2503 \u2517 R-24194.pdf \u2503 \u2503 \u2523 1652124450182 \u2503 \u2503 \u2503 \u2517 R-26045.pdf \u2503 \u2503 \u2523 1652195941204 \u2503 \u2503 \u2503 \u2517 R-25298.pdf \u2503 \u2503 \u2523 1652197890419 \u2503 \u2503 \u2503 \u2517 R-25310.pdf \u2503 \u2503 \u2523 1652969139256 \u2503 \u2503 \u2503 \u2517 O-13016.pdf \u2503 \u2503 \u2523 1654504012914 \u2503 \u2503 \u2503 \u2517 R-39321.pdf \u2503 \u2503 \u2517 1654505224913 \u2503 \u2503 \u2503 \u2517 R-39321.pdf \u2503 \u2517 .DS_Store \u2523 validators \u2503 \u2523 ArticleChangeValidator.ts \u2503 \u2523 ArticleParentValidator.ts \u2503 \u2523 ArticoloClienteOrdineValidator.ts \u2503 \u2523 ArticoloMensileValidator.ts \u2503 \u2523 ArticoloOrdineValidator.ts \u2503 \u2523 ArticoloPropostaValidator.ts \u2503 \u2523 ArticoloRinnovoStoricoValidator.ts \u2503 \u2523 ArticoloRinnovoValidator.ts \u2503 \u2523 ArticoloValidator.ts \u2503 \u2523 AttivazioneArticoloOrdineValidator.ts \u2503 \u2523 CambioPianoValidator.ts \u2503 \u2523 ClienteValidator.ts \u2503 \u2523 ConfigurazioneMensileLocaleValidator.ts \u2503 \u2523 ConfigurazioneRinnovoLocaleValidator.ts \u2503 \u2523 ContattoValidator.ts \u2503 \u2523 CostruttoreValidator.ts \u2503 \u2523 DisdettaValidator.ts \u2503 \u2523 GruppoCassaincloudValidator.ts \u2503 \u2523 GruppoValidator.ts \u2503 \u2523 LocaleValidator.ts \u2503 \u2523 MacroTipoArticoloValidator.ts \u2503 \u2523 MailValidator.ts \u2503 \u2523 MatricolaArticoloOrdineValidator.ts \u2503 \u2523 MensileValidator.ts \u2503 \u2523 MotivazioneValidator.ts \u2503 \u2523 NumbersValidator.ts \u2503 \u2523 OrdineValidator.ts \u2503 \u2523 PagamentoMensileValidator.ts \u2503 \u2523 PrezzoValidator.ts \u2503 \u2523 ProfiloContattoValidator.ts \u2503 \u2523 ProfiloLocaleValidator.ts \u2503 \u2523 PropostaValidator.ts \u2503 \u2523 RepartoValidator.ts \u2503 \u2523 RinnovoValidator.ts \u2503 \u2523 StatoValidator.ts \u2503 \u2523 TPaymentEsattoValidator.ts \u2503 \u2523 TTraceValidator.ts \u2503 \u2523 TipoArticoloValidator.ts \u2503 \u2523 TipoFatturazioneValidator.ts \u2503 \u2523 TipoGruppoValidator.ts \u2503 \u2523 TipoOrdineValidator.ts \u2503 \u2517 UtenteValidator.ts \u2523 views \u2503 \u2523 guest.ejs \u2503 \u2517 redoc_docs.ejs \u2523 .DS_Store \u2523 Server.ts \u2523 cluster.ts \u2517 index.ts","title":"Struttura"},{"location":"architettura/backend/casi-uso/","text":"Casi d'uso L'applicazione di backend deve gestire tre casi d'uso: Interazione generale con il database (CRUD) Interazione specifica con il database (Logiche di Business) Servizi aggiungivi (Mail, File Manager, PDF, ...)","title":"Casi d'uso"},{"location":"architettura/backend/casi-uso/#casi-duso","text":"L'applicazione di backend deve gestire tre casi d'uso: Interazione generale con il database (CRUD) Interazione specifica con il database (Logiche di Business) Servizi aggiungivi (Mail, File Manager, PDF, ...)","title":"Casi d'uso"},{"location":"architettura/backend/casi-uso/logiche-business/","text":"Logiche di business Oltre agli endpoint che forniscono le funzionalit\u00e0 CRUD sono presenti altri endpoint per le logiche di business pi\u00f9 complesse, tendenzialmente annidata all'interno degli endpoint della tabella che li riguarda maggiormente. Articolo Logiche di business articolo: Articoli figli GET articolo/{id}/childrens Restituisce ricorsivamente gli articoli figli di uno specifico articolo, utilizzando i dati contenuti nella tabella article_parent. Articolo Mensile Logiche di business articolo mensile: Disdetta mensile PUT articoloMensile/{id}/disdetta Effettua la disdetta di un articolo di un mensile comunicando la disdetta a trace nel caso in cui l'articolo non sia un nuovo articolo e cancellando il mensile se non sono presenti altri articoli nello stesso mensile Cambio Piano Mensile PUT articoloMensile/{id}/cambioPiano Esegue il cambio piano dell'articolo mensile con un altro articolo Opzioni Cambio Piano Mensile GET articoloMensile/{id}/opzioniCambioPiano Restituisce gli articoli con i quasi \u00e8 possibile effettuare il cambio piano Articolo Ordine Logiche di business articolo ordine: Cancella articoli ordine DELETE articoloOrdine/ordine/{id} Cancella tutti gli articoli allegati ad un ordine Articolo Rinnovo Logiche di business articolo rinnovo: Disdetta rinnovo PUT articoloRinnovo/{id}/disdetta Effettua la disdetta di un articolo di un rinnovo comunicando la disdetta a trace nel caso in cui l'articolo non sia un nuovo articolo e impostando il rinnovo a completato se non sono presenti altri articoli nello stesso rinnovo Cambio Piano Rinnovo PUT articoloRinnovo/{id}/cambioPiano Esegue il cambio piano dell'articolo rinnovo con un altro articolo Opzioni Cambio Piano Rinnovo GET articoloRinnovo/{id}/opzioniCambioPiano Restituisce gli articoli con i quasi \u00e8 possibile effettuare il cambio piano Mensile: Logiche di business mensile: Genera Fatture PUT mensile/generaFatture Esegue la generazione delle fatture per tutti i mensili del mese attuale. Totale Profili Mensile GET mensile/totaleProfili/{mese}/{anno} Restituisce il totale dei rinnovi mensili di un certo mese e anno raggruppati per profilo locale Ordine Logiche di business ordine: Ottieni stati disponibili GET ordine/{id}/availableStatus Restituisce i possibili stati con i quali \u00e8 possibile modificare lo stato dell'ordine Modifica stato PUT ordine/{id}/stato/{stato} Effettua la modifica dello stato di un ordine con prima tutti i controlli e le azioni necessarie. Ottieni ulteriori informazioni sui passaggi di stato nella sezione dedicata Ottieni matricole e attivazioni GET ordine/{id}/serialActivation Restituisce lo stato di inserimento delle matricole e date di attivazioni all'interno dell'ordine. Questo endpoint mette in relazione gli articoli dell'ordine con le matricole e le date di attivazione che sono state inserite. Il risultato ottenuto \u00e8 una rappresentazione dello stato attuale di inserimento delle matricole e date di attivazione dove \u00e8 possibile sapere quali articoli hanno bisogno di matricola / attivazione, per quali sono gi\u00e0 state inserite e quali sono i valori che sono eventualmente stati inseriti. Cancella matricole e attivazioni DELETE ordine/{id}/serialActivation Permette di cancellare tutte le matricole e le date di attivazione che sono state inserite per un ordine. Questo endpoint \u00e8 necessario in caso di modifica degli articoli di un ordine. Rinnovo Logiche di business rinnovo: Rinnova PUT rinnovo/{id}/rinnova Effettua la conferma di un rinnovo Totale Profili Rinnovo GET rinnovo/totaleProfili/{mese}/{anno} Restituisce il totale dei rinnovi di un certo mese e anno raggruppati per profilo locale T Payment Esatto Logiche di business t_payment_esatto (metodi di pagamento): Pagamento Canoni GET tPaymentEsatto/canoni Ottieni tutti i metodi di pagamento di tipo canone T Trace Logiche di business t_trace: Contratto locale GET tTrace/contratto/{cliente}/{locale} Restituisce il contratto di un cliente relativo ad uno specifico locale Contratto generale GET tTrace/contratto/{cliente} Restituisce il contratto di un cliente relativo a tutti i locali","title":"Logiche di Business"},{"location":"architettura/backend/casi-uso/logiche-business/#logiche-di-business","text":"Oltre agli endpoint che forniscono le funzionalit\u00e0 CRUD sono presenti altri endpoint per le logiche di business pi\u00f9 complesse, tendenzialmente annidata all'interno degli endpoint della tabella che li riguarda maggiormente.","title":"Logiche di business"},{"location":"architettura/backend/casi-uso/logiche-business/#articolo","text":"Logiche di business articolo:","title":"Articolo"},{"location":"architettura/backend/casi-uso/logiche-business/#articoli-figli","text":"GET articolo/{id}/childrens Restituisce ricorsivamente gli articoli figli di uno specifico articolo, utilizzando i dati contenuti nella tabella article_parent.","title":"Articoli figli"},{"location":"architettura/backend/casi-uso/logiche-business/#articolo-mensile","text":"Logiche di business articolo mensile:","title":"Articolo Mensile"},{"location":"architettura/backend/casi-uso/logiche-business/#disdetta-mensile","text":"PUT articoloMensile/{id}/disdetta Effettua la disdetta di un articolo di un mensile comunicando la disdetta a trace nel caso in cui l'articolo non sia un nuovo articolo e cancellando il mensile se non sono presenti altri articoli nello stesso mensile","title":"Disdetta mensile"},{"location":"architettura/backend/casi-uso/logiche-business/#cambio-piano-mensile","text":"PUT articoloMensile/{id}/cambioPiano Esegue il cambio piano dell'articolo mensile con un altro articolo","title":"Cambio Piano Mensile"},{"location":"architettura/backend/casi-uso/logiche-business/#opzioni-cambio-piano-mensile","text":"GET articoloMensile/{id}/opzioniCambioPiano Restituisce gli articoli con i quasi \u00e8 possibile effettuare il cambio piano","title":"Opzioni Cambio Piano Mensile"},{"location":"architettura/backend/casi-uso/logiche-business/#articolo-ordine","text":"Logiche di business articolo ordine:","title":"Articolo Ordine"},{"location":"architettura/backend/casi-uso/logiche-business/#cancella-articoli-ordine","text":"DELETE articoloOrdine/ordine/{id} Cancella tutti gli articoli allegati ad un ordine","title":"Cancella articoli ordine"},{"location":"architettura/backend/casi-uso/logiche-business/#articolo-rinnovo","text":"Logiche di business articolo rinnovo:","title":"Articolo Rinnovo"},{"location":"architettura/backend/casi-uso/logiche-business/#disdetta-rinnovo","text":"PUT articoloRinnovo/{id}/disdetta Effettua la disdetta di un articolo di un rinnovo comunicando la disdetta a trace nel caso in cui l'articolo non sia un nuovo articolo e impostando il rinnovo a completato se non sono presenti altri articoli nello stesso rinnovo","title":"Disdetta rinnovo"},{"location":"architettura/backend/casi-uso/logiche-business/#cambio-piano-rinnovo","text":"PUT articoloRinnovo/{id}/cambioPiano Esegue il cambio piano dell'articolo rinnovo con un altro articolo","title":"Cambio Piano Rinnovo"},{"location":"architettura/backend/casi-uso/logiche-business/#opzioni-cambio-piano-rinnovo","text":"GET articoloRinnovo/{id}/opzioniCambioPiano Restituisce gli articoli con i quasi \u00e8 possibile effettuare il cambio piano","title":"Opzioni Cambio Piano Rinnovo"},{"location":"architettura/backend/casi-uso/logiche-business/#mensile","text":"Logiche di business mensile:","title":"Mensile:"},{"location":"architettura/backend/casi-uso/logiche-business/#genera-fatture","text":"PUT mensile/generaFatture Esegue la generazione delle fatture per tutti i mensili del mese attuale.","title":"Genera Fatture"},{"location":"architettura/backend/casi-uso/logiche-business/#totale-profili-mensile","text":"GET mensile/totaleProfili/{mese}/{anno} Restituisce il totale dei rinnovi mensili di un certo mese e anno raggruppati per profilo locale","title":"Totale Profili Mensile"},{"location":"architettura/backend/casi-uso/logiche-business/#ordine","text":"Logiche di business ordine:","title":"Ordine"},{"location":"architettura/backend/casi-uso/logiche-business/#ottieni-stati-disponibili","text":"GET ordine/{id}/availableStatus Restituisce i possibili stati con i quali \u00e8 possibile modificare lo stato dell'ordine","title":"Ottieni stati disponibili"},{"location":"architettura/backend/casi-uso/logiche-business/#modifica-stato","text":"PUT ordine/{id}/stato/{stato} Effettua la modifica dello stato di un ordine con prima tutti i controlli e le azioni necessarie. Ottieni ulteriori informazioni sui passaggi di stato nella sezione dedicata","title":"Modifica stato"},{"location":"architettura/backend/casi-uso/logiche-business/#ottieni-matricole-e-attivazioni","text":"GET ordine/{id}/serialActivation Restituisce lo stato di inserimento delle matricole e date di attivazioni all'interno dell'ordine. Questo endpoint mette in relazione gli articoli dell'ordine con le matricole e le date di attivazione che sono state inserite. Il risultato ottenuto \u00e8 una rappresentazione dello stato attuale di inserimento delle matricole e date di attivazione dove \u00e8 possibile sapere quali articoli hanno bisogno di matricola / attivazione, per quali sono gi\u00e0 state inserite e quali sono i valori che sono eventualmente stati inseriti.","title":"Ottieni matricole e attivazioni"},{"location":"architettura/backend/casi-uso/logiche-business/#cancella-matricole-e-attivazioni","text":"DELETE ordine/{id}/serialActivation Permette di cancellare tutte le matricole e le date di attivazione che sono state inserite per un ordine. Questo endpoint \u00e8 necessario in caso di modifica degli articoli di un ordine.","title":"Cancella matricole e attivazioni"},{"location":"architettura/backend/casi-uso/logiche-business/#rinnovo","text":"Logiche di business rinnovo:","title":"Rinnovo"},{"location":"architettura/backend/casi-uso/logiche-business/#rinnova","text":"PUT rinnovo/{id}/rinnova Effettua la conferma di un rinnovo","title":"Rinnova"},{"location":"architettura/backend/casi-uso/logiche-business/#totale-profili-rinnovo","text":"GET rinnovo/totaleProfili/{mese}/{anno} Restituisce il totale dei rinnovi di un certo mese e anno raggruppati per profilo locale","title":"Totale Profili Rinnovo"},{"location":"architettura/backend/casi-uso/logiche-business/#t-payment-esatto","text":"Logiche di business t_payment_esatto (metodi di pagamento):","title":"T Payment Esatto"},{"location":"architettura/backend/casi-uso/logiche-business/#pagamento-canoni","text":"GET tPaymentEsatto/canoni Ottieni tutti i metodi di pagamento di tipo canone","title":"Pagamento Canoni"},{"location":"architettura/backend/casi-uso/logiche-business/#t-trace","text":"Logiche di business t_trace:","title":"T Trace"},{"location":"architettura/backend/casi-uso/logiche-business/#contratto-locale","text":"GET tTrace/contratto/{cliente}/{locale} Restituisce il contratto di un cliente relativo ad uno specifico locale","title":"Contratto locale"},{"location":"architettura/backend/casi-uso/logiche-business/#contratto-generale","text":"GET tTrace/contratto/{cliente} Restituisce il contratto di un cliente relativo a tutti i locali","title":"Contratto generale"},{"location":"architettura/backend/casi-uso/servizi/","text":"Servizi Aggiuntivi Oltre alle operazioni di tipo CRUD e alle logiche di business t-order ha un altro tipo di endpoint, quelli riguardanti i servizi aggiuntivi. File Manager Il backend offre le funzionalit\u00e0 da file manager per due scopi principali: Allegati ordini File temporanei La dimensione massima ammessa per i file caricati \u00e8 di 50 Mb. Note Il backend utilizza il middleware fornito dal pacchetto express-fileupload per gestire l'upload dei file Allegati ordini Ogni ordine ammette un numero indefinito di file allegati, sono disponibili 4 endpoint per la gestione dei file allegati ad un ordine: Allega File POST file/ordine/{id} Questo endpoint permette di caricare un file come allegato di un ordine. Lista Allegati GET file/ordine/{id} Ottieni la lista dei nomi dei file allegati all'ordine Ottieni Allegato GET file/ordine/{id}/{file} Scarica un file allegato all'ordine in base al suo nome Cancella Allegato DELETE file/ordine/{id}/{file} Cancella un file allegato all'ordine File Temporanei La sezione file temporanei permette di caricare dei file organizzandoli in cartelle. Lo scopo principale di queste api \u00e8 quello di preparare una serie di file per poi procedere ad allegarli ad una mail. Carica file POST file/temp/{id} Questo endpoint permette di caricare un file all'interno della cartella temporanea id. Se la cartella non esiste viene creata automaticamenteo. La dimensione massima ammessa per i file allegati \u00e8 di 50 Mb. Lista file in cartella GET file/temp/{id} Ottieni la lista dei nomi dei file presenti nella cartella temporanea Cancella cartella DELETE file/temp/{id} Cancella tutto il contenuto di una cartella temporanea Ottieni un file GET file/temp/{id}/{file} Ottieni uno specifico file da una cartella temporanea Cancella un file DELETE file/temp/{id}/{file} Cancella un file da una cartella temporanea Ospiti Esiste uno specifico endpoint per permettere ai clienti di effettuare alcune operazioni, per ora l'unica operazione possibile \u00e8 la conferma del preventivo Conferma del preventivo PUT guest/conferma-preventivo Conferma di un preventivo da parte del cliente. Mail Esiste un servizio di mailing configurato con due profili diversi, un profilo permette di inviare qualsiasi tipo di email e viene esposto tramite api mentre un secondo profilo viene utilizzato per l'invio di notifiche interne Invio Mail POST mail/invia Invia una mail Mail Notifica T-order utilizza il sistema di mailing anche per inviare notifiche agli utenti. PDF T-Order permette di visualizzare gli ordini e i rinnovi sotto forma di PDF PDF Ordine GET pdf/ordine/{id} Ottieni la visualizzazione in PDF di un ordine PDF Rinnovo GET pdf/rinnovo/{id} Ottieni la visualizzazione in PDF di un rinnovo PDF Proposta Rinnovo GET pdf/rinnovo/proposta/{id} Ottieni la visualizzazione in PDF della proposta di un rinnovo, rientrano nel PDF della proposta di rinnovo tutti gli articoli rinnovo con proponi true. PDF Mensile GET pdf/mensile/{id} Ottieni la visualizzazione in PDF di un mensile","title":"Servizi Aggiuntivi"},{"location":"architettura/backend/casi-uso/servizi/#servizi-aggiuntivi","text":"Oltre alle operazioni di tipo CRUD e alle logiche di business t-order ha un altro tipo di endpoint, quelli riguardanti i servizi aggiuntivi.","title":"Servizi Aggiuntivi"},{"location":"architettura/backend/casi-uso/servizi/#file-manager","text":"Il backend offre le funzionalit\u00e0 da file manager per due scopi principali: Allegati ordini File temporanei La dimensione massima ammessa per i file caricati \u00e8 di 50 Mb. Note Il backend utilizza il middleware fornito dal pacchetto express-fileupload per gestire l'upload dei file","title":"File Manager"},{"location":"architettura/backend/casi-uso/servizi/#allegati-ordini","text":"Ogni ordine ammette un numero indefinito di file allegati, sono disponibili 4 endpoint per la gestione dei file allegati ad un ordine:","title":"Allegati ordini"},{"location":"architettura/backend/casi-uso/servizi/#allega-file","text":"POST file/ordine/{id} Questo endpoint permette di caricare un file come allegato di un ordine.","title":"Allega File"},{"location":"architettura/backend/casi-uso/servizi/#lista-allegati","text":"GET file/ordine/{id} Ottieni la lista dei nomi dei file allegati all'ordine","title":"Lista Allegati"},{"location":"architettura/backend/casi-uso/servizi/#ottieni-allegato","text":"GET file/ordine/{id}/{file} Scarica un file allegato all'ordine in base al suo nome","title":"Ottieni Allegato"},{"location":"architettura/backend/casi-uso/servizi/#cancella-allegato","text":"DELETE file/ordine/{id}/{file} Cancella un file allegato all'ordine","title":"Cancella Allegato"},{"location":"architettura/backend/casi-uso/servizi/#file-temporanei","text":"La sezione file temporanei permette di caricare dei file organizzandoli in cartelle. Lo scopo principale di queste api \u00e8 quello di preparare una serie di file per poi procedere ad allegarli ad una mail.","title":"File Temporanei"},{"location":"architettura/backend/casi-uso/servizi/#carica-file","text":"POST file/temp/{id} Questo endpoint permette di caricare un file all'interno della cartella temporanea id. Se la cartella non esiste viene creata automaticamenteo. La dimensione massima ammessa per i file allegati \u00e8 di 50 Mb.","title":"Carica file"},{"location":"architettura/backend/casi-uso/servizi/#lista-file-in-cartella","text":"GET file/temp/{id} Ottieni la lista dei nomi dei file presenti nella cartella temporanea","title":"Lista file in cartella"},{"location":"architettura/backend/casi-uso/servizi/#cancella-cartella","text":"DELETE file/temp/{id} Cancella tutto il contenuto di una cartella temporanea","title":"Cancella cartella"},{"location":"architettura/backend/casi-uso/servizi/#ottieni-un-file","text":"GET file/temp/{id}/{file} Ottieni uno specifico file da una cartella temporanea","title":"Ottieni un file"},{"location":"architettura/backend/casi-uso/servizi/#cancella-un-file","text":"DELETE file/temp/{id}/{file} Cancella un file da una cartella temporanea","title":"Cancella un file"},{"location":"architettura/backend/casi-uso/servizi/#ospiti","text":"Esiste uno specifico endpoint per permettere ai clienti di effettuare alcune operazioni, per ora l'unica operazione possibile \u00e8 la conferma del preventivo","title":"Ospiti"},{"location":"architettura/backend/casi-uso/servizi/#conferma-del-preventivo","text":"PUT guest/conferma-preventivo Conferma di un preventivo da parte del cliente.","title":"Conferma del preventivo"},{"location":"architettura/backend/casi-uso/servizi/#mail","text":"Esiste un servizio di mailing configurato con due profili diversi, un profilo permette di inviare qualsiasi tipo di email e viene esposto tramite api mentre un secondo profilo viene utilizzato per l'invio di notifiche interne","title":"Mail"},{"location":"architettura/backend/casi-uso/servizi/#invio-mail","text":"POST mail/invia Invia una mail","title":"Invio Mail"},{"location":"architettura/backend/casi-uso/servizi/#mail-notifica","text":"T-order utilizza il sistema di mailing anche per inviare notifiche agli utenti.","title":"Mail Notifica"},{"location":"architettura/backend/casi-uso/servizi/#pdf","text":"T-Order permette di visualizzare gli ordini e i rinnovi sotto forma di PDF","title":"PDF"},{"location":"architettura/backend/casi-uso/servizi/#pdf-ordine","text":"GET pdf/ordine/{id} Ottieni la visualizzazione in PDF di un ordine","title":"PDF Ordine"},{"location":"architettura/backend/casi-uso/servizi/#pdf-rinnovo","text":"GET pdf/rinnovo/{id} Ottieni la visualizzazione in PDF di un rinnovo","title":"PDF Rinnovo"},{"location":"architettura/backend/casi-uso/servizi/#pdf-proposta-rinnovo","text":"GET pdf/rinnovo/proposta/{id} Ottieni la visualizzazione in PDF della proposta di un rinnovo, rientrano nel PDF della proposta di rinnovo tutti gli articoli rinnovo con proponi true.","title":"PDF Proposta Rinnovo"},{"location":"architettura/backend/casi-uso/servizi/#pdf-mensile","text":"GET pdf/mensile/{id} Ottieni la visualizzazione in PDF di un mensile","title":"PDF Mensile"},{"location":"architettura/backend/casi-uso/crud/","text":"CRUD Le API offrono uno specifico endpoint per l'interazione con ogni tabella del database. Interazioni base Per ogni tabella del database \u00e8 possibile: Creare un nuovo record (CREATE) Ottenere un record esistente (READ) Modificare un record esistente (UPDATE) Eliminare un record esistente (DELETE) Ognuno di queste operazioni \u00e8 disponibile in un endpoint denominato come la tabella in questione mappato allo specifico metodo HTTP: CRUD HTTP ENDPOINT DESCRIZIONE CREATE POST api/nomeTabella aggiungi un record READ GET api/nomeTabella/:id ottieni un record in base al suo id UPDATE PUT api/nomeTabella/:id modifica un record in base al suo id DELETE DELETE api/nomeTabella/:id elimina un record in base al suo id Chiavi composte Per le tabelle la quale chiave primaria \u00e8 composta da pi\u00f9 campi gli endpoint riferiti ad uno specifico record vengono composti in questo modo: api/nomeTabella/:campo1/:campo2/... Interazioni aggiuntive Ogni tabella fornisce altri tre endpoint: CRUD HTTP ENDPOINT DESCRIZIONE READ GET api/nomeTabella ottieni tutti i record di una tabella READ GET api/nomeTabella/count ottieni il totale dei record di una tabella READ GET api/nomeTabella/pagina/:pagina ottieni i record impaginati 10 alla volta","title":"CRUD"},{"location":"architettura/backend/casi-uso/crud/#crud","text":"Le API offrono uno specifico endpoint per l'interazione con ogni tabella del database.","title":"CRUD"},{"location":"architettura/backend/casi-uso/crud/#interazioni-base","text":"Per ogni tabella del database \u00e8 possibile: Creare un nuovo record (CREATE) Ottenere un record esistente (READ) Modificare un record esistente (UPDATE) Eliminare un record esistente (DELETE) Ognuno di queste operazioni \u00e8 disponibile in un endpoint denominato come la tabella in questione mappato allo specifico metodo HTTP: CRUD HTTP ENDPOINT DESCRIZIONE CREATE POST api/nomeTabella aggiungi un record READ GET api/nomeTabella/:id ottieni un record in base al suo id UPDATE PUT api/nomeTabella/:id modifica un record in base al suo id DELETE DELETE api/nomeTabella/:id elimina un record in base al suo id Chiavi composte Per le tabelle la quale chiave primaria \u00e8 composta da pi\u00f9 campi gli endpoint riferiti ad uno specifico record vengono composti in questo modo: api/nomeTabella/:campo1/:campo2/...","title":"Interazioni base"},{"location":"architettura/backend/casi-uso/crud/#interazioni-aggiuntive","text":"Ogni tabella fornisce altri tre endpoint: CRUD HTTP ENDPOINT DESCRIZIONE READ GET api/nomeTabella ottieni tutti i record di una tabella READ GET api/nomeTabella/count ottieni il totale dei record di una tabella READ GET api/nomeTabella/pagina/:pagina ottieni i record impaginati 10 alla volta","title":"Interazioni aggiuntive"},{"location":"architettura/backend/casi-uso/crud/query/","text":"Query Alle richieste di tipo GET \u00e8 possibile allegare una query in formato JSON che verr\u00e0 utilizzata per modificare il risultato della richiesta Come inviarla E' possibile passare la query all'interno della richiesta direttamente come oggetto JSON all'interno del corpo oppure serializzata e passata come query parameter. Break the Rules Secondo le specifiche HTTP ogni richiesta pu\u00f2 contenere un corpo, a prescindere dal suo metodo. Nonostante questo la sezione 4.3 specifica che il corpo di una richiesta di tipo GET non dovrebbe modificare il risultato della richiesta stessa, questa regola viene appositamente infranta in T-Order nel momento in cui la query viene passata tramite corpo della richiesta. Sintassi La query pi\u00f9 semplice possibile \u00e8 la seguente: { \"options\" : {} } All'interno di options \u00e8 possibile inserire tutte le opzioni: Includere (Join) Alcuni dei campi del database di t-order sono riferimenti a specifici record in altre tabelle, \u00e8 possibile inserire nella risposta anche il record riferito. Per effettuare una Join \u00e8 necessario inserire l'opzione include : { \"options\" : { \"include\" : [] } } Stringa di relazione All'interno di include a questo punto \u00e8 necessario inserire una stringa corrispondente alla relazione. La stringa in questione viene composta in maniera diversa in base al tipo di relazione fra le due tabelle: Relazione 1:1 In una relazione \"uno a uno\", un record in una tabella \u00e8 associato a un unico record in un'altra tabella. Il database di T-Order presenta questa relazione solo per le tabelle configurazione_rinnovo_locale e configurazione_mensile_locale, tabelle contenenti le configurazioni (pagamento, fatturazione alternativa, ...) comuni per ogni rinnovo o mensile di un locale. Per ogni locale esiste un'unica configurazione_rinnovo_locale ed ogni configurazione rinnovo locale \u00e8 legata ad un unico locale, vale lo stesso per la configurazione_mensile_locale. Un locale pu\u00f2 non avere nessuna configurazione_mensile_locale o configurazione_rinnovo_locale ma non pu\u00f2 esistere configurazione senza il locale collegato. Per ottenere questo tipo di relazione in un database relazionale \u00e8 necessario inserire una chiave esterna in una delle due tabelle, in particolare la soluzione adottata \u00e8 stata quella di inserire nella configurazione_mensile_locale e nella configurazione_rinnovo_locale un campo locale contenente l'id del locale e utilizzarlo come chiave primaria per la tabella. In questo modo \u00e8 possibile inserire solo un record per locale nella configurazione_mensile_locale e uno nella configurazione_rinnovo_locale. Per eseguire join da endpoint GET api/locale devo comporre la stringa in questo modo: \"locale_configurazione_mensile_locale\" \u2192 per collegare la configurazione mensile \"locale_configurazione_rinnovo_locale\" \u2192 per collegare la configurazione rinnovo Per eseguire join da endpoint GET api/configurazione_mensile_locale o da GET api/configurazione_mensile_locale devo utilizzare la stringa \"locale_locale\" Per effettuare una join a partire dalla tabella contenente la chiave esterna, la stringa si compone in questo modo: \"[chiave]_[nome_altra_tabella]\" Per effettuare una join a partire dalla tabella senza la chiave esterna, la stringa si compone in questo modo: per comporre la stringa \u00e8 sufficente tradurre il pensiero tramite il campo abc collego la tabella def nella stringa abc_def Esempio La tabella configurazione_mensile_locale ha un campo locale che che contiene l'id di uno specifico record nella tabella locale, la query che dovr\u00f2 passare all'endpoint GET api/configurazione_mensile_locale/:id \u00e8 la seguente: { \"options\" :{ \"include\" :[ \"locale_locale\" ] } } Risponde alla frase: \"tramite il campo locale includo la tabella locale\" hasOne belongsTo Relazione 1:N belongsTo Esempio La tabella cliente ha un campo locale che che contiene l'id di uno specifico record nella tabella locale, la query che dovr\u00f2 passare all'endpoint GET api/cliente/:id \u00e8 la seguente: { \"options\" :{ \"include\" :[ \"locale_locale\" ] } } Risponde alla frase: \"tramite il campo locale includo la tabella locale\" La richiesta restituir\u00e0 un oggetto di questo tipo: { \"id\" : \"id_cliente\" \"nome\" : \"nome_cliente\" , \"ragsoc\" : \"ragione_sociale\" , ... , \"locale\" : \"id_locale\" , \"locale_locale\" :{ \"id_locale\" , ... } } Se per qualsiasi motivo non \u00e8 possibile collegare il cliente al locale il campo locale_locale sar\u00e0 null Relazione N:M Nested Join Per effettuare join innestate \u00e8 necessario utilizzare un'altra strategia per include. In questo caso infatti la query dovr\u00e0 essere composta in questo modo: { \"options\" :{ \"include\" :{ \"model\" : \"nome_tabella\" , \"as\" : s tr i n ga di relazio ne , \"include\" : { \"model\" : \"nome_seconda_tabella\" , \"as\" : s tr i n ga di relazio ne } } } } Esempio La tabella cliente ha un campo locale che che contiene l'id di uno specifico record nella tabella locale e il locale ha un campo profilo_locale che contiene l'id di uno specifico record nella tabella profilo_locale, la query che dovr\u00f2 passare all'endpoint GET api/cliente/:id \u00e8 la seguente: { \"options\" :{ \"include\" :{ \"model\" : \"locale\" , \"as\" : \"locale_locale\" , \"include\" : { \"model\" : \"profilo_locale\" , \"as\" : \"profilo_locale_profilo_locale\" } } } } La richiesta restituir\u00e0 un oggetto di questo tipo: { \"id\" : \"id_cliente\" \"nome\" : \"nome_cliente\" , \"ragsoc\" : \"ragione_sociale\" , ... , \"locale\" : \"id_locale\" , \"locale_locale\" :{ \"id_locale\" , ... , \"profilo_locale\" : \"id_profilo_locale\" , \"profilo_locale_profilo_locale\" :{ \"id\" : \"id_profilo_locale\" , \"descrizione\" : \"descrizione_profilo_locale\" } } } Filtrare (Where) Per filtrare i risultati all'interno di una query \u00e8 possibile utilizzare l'opzione where: { \"options\" : { \"where\" : {} } } Filtro per uguaglianza Voglio ottenere tutti i locali che hanno profilo_locale = 4, la query che dovr\u00f2 passare all'endpoint GET api/locale \u00e8 la seguente: { \"options\" :{ \"where\" :{ \"profilo_locale\" : 4 } } } Operazioni disponibili Oltre a filtrare per uguaglianza \u00e8 possibile inserire all'interno dell'opzione where una serie di specifiche stringhe che vengono poi mappate in operazioni sequelize, le operazioni disponibili sono: \"where\" : { \"and\" : [{ \"a\" : 5 }, { \"b\" : 6 }], // (a = 5) AND (b = 6) \"or\" : [{ \"a\" : 5 }, { \"b\" : 6 }], // (a = 5) OR (b = 6) \"attributo\" : { // Base \"eq\" : 3 , // = 3 \"ne\" : 20 , // != 20 \"is\" : null , // IS NULL \"not\" : true , // IS NOT TRUE \"or\" : [ 5 , 6 ], // (attributo = 5) OR (attributo = 6) // Specificare colonna \"col\" : 'user.orga n iza t io n _id' , // = \"user\".\"organization_id\" // Comparazione numerica \"gt\" : 6 , // > 6 \"gte\" : 6 , // >= 6 \"lt\" : 10 , // < 10 \"lte\" : 10 , // <= 10 \"between\" : [ 6 , 10 ], // BETWEEN 6 AND 10 \"notBetween\" : [ 11 , 15 ], // NOT BETWEEN 11 AND 15 // Altri operatori \"all\" : ... , // > ALL (...) \"in\" : [ 1 , 2 ], // IN [1, 2 \"notIn\" : [ 1 , 2 ], // NOT IN [1, 2 \"like\" : \"%hat\" , // LIKE '%hat' \"notLike\" : \"%hat\" , // NOT LIKE '%hat' \"startsWith\" : \"hat\" , // LIKE 'hat%' \"endsWith\" : \"hat\" , // LIKE '%hat' \"substring\" : \"hat\" , // LIKE '%hat%' } } Nested where Per filtrare una query basandosi su un campo annidato \u00e8 possibile utilizzare la seguente sintassi: $nested.column$ \"where\" : { \"$instruments.size$\" : { \"ne\" : \"small\" } }, Ordinare (Order by) l'opzione order permette di ordinare i risultati di una query, la sintassi da utilizzare \u00e8 la seguente \"order\" : [ \"nome_colonna\" , ASC | DESC ] \u00e8 possibile anche ordinare per pi\u00f9 di una colonna con la seguente sintassi: \"order\" :[ [ \"colonna1\" , ASC | DESC ], [ \"colonna2\" , ASC | DESC ] ] Raggruppare (Group by) l'opzione group permette di raggruppare i risultati di una query, la sintassi da utilizzare \u00e8 la seguente \"group\" : [ \"nome_colonna\" ] \u00e8 possibile anche raggruppare per pi\u00f9 di una colonna con la seguente sintassi: \"group\" :[ \"colonna1\" , \"colonna2\" ]","title":"Query"},{"location":"architettura/backend/casi-uso/crud/query/#query","text":"Alle richieste di tipo GET \u00e8 possibile allegare una query in formato JSON che verr\u00e0 utilizzata per modificare il risultato della richiesta","title":"Query"},{"location":"architettura/backend/casi-uso/crud/query/#come-inviarla","text":"E' possibile passare la query all'interno della richiesta direttamente come oggetto JSON all'interno del corpo oppure serializzata e passata come query parameter. Break the Rules Secondo le specifiche HTTP ogni richiesta pu\u00f2 contenere un corpo, a prescindere dal suo metodo. Nonostante questo la sezione 4.3 specifica che il corpo di una richiesta di tipo GET non dovrebbe modificare il risultato della richiesta stessa, questa regola viene appositamente infranta in T-Order nel momento in cui la query viene passata tramite corpo della richiesta.","title":"Come inviarla"},{"location":"architettura/backend/casi-uso/crud/query/#sintassi","text":"La query pi\u00f9 semplice possibile \u00e8 la seguente: { \"options\" : {} } All'interno di options \u00e8 possibile inserire tutte le opzioni:","title":"Sintassi"},{"location":"architettura/backend/casi-uso/crud/query/#includere-join","text":"Alcuni dei campi del database di t-order sono riferimenti a specifici record in altre tabelle, \u00e8 possibile inserire nella risposta anche il record riferito. Per effettuare una Join \u00e8 necessario inserire l'opzione include : { \"options\" : { \"include\" : [] } }","title":"Includere (Join)"},{"location":"architettura/backend/casi-uso/crud/query/#stringa-di-relazione","text":"All'interno di include a questo punto \u00e8 necessario inserire una stringa corrispondente alla relazione. La stringa in questione viene composta in maniera diversa in base al tipo di relazione fra le due tabelle:","title":"Stringa di relazione"},{"location":"architettura/backend/casi-uso/crud/query/#relazione-11","text":"In una relazione \"uno a uno\", un record in una tabella \u00e8 associato a un unico record in un'altra tabella. Il database di T-Order presenta questa relazione solo per le tabelle configurazione_rinnovo_locale e configurazione_mensile_locale, tabelle contenenti le configurazioni (pagamento, fatturazione alternativa, ...) comuni per ogni rinnovo o mensile di un locale. Per ogni locale esiste un'unica configurazione_rinnovo_locale ed ogni configurazione rinnovo locale \u00e8 legata ad un unico locale, vale lo stesso per la configurazione_mensile_locale. Un locale pu\u00f2 non avere nessuna configurazione_mensile_locale o configurazione_rinnovo_locale ma non pu\u00f2 esistere configurazione senza il locale collegato. Per ottenere questo tipo di relazione in un database relazionale \u00e8 necessario inserire una chiave esterna in una delle due tabelle, in particolare la soluzione adottata \u00e8 stata quella di inserire nella configurazione_mensile_locale e nella configurazione_rinnovo_locale un campo locale contenente l'id del locale e utilizzarlo come chiave primaria per la tabella. In questo modo \u00e8 possibile inserire solo un record per locale nella configurazione_mensile_locale e uno nella configurazione_rinnovo_locale. Per eseguire join da endpoint GET api/locale devo comporre la stringa in questo modo: \"locale_configurazione_mensile_locale\" \u2192 per collegare la configurazione mensile \"locale_configurazione_rinnovo_locale\" \u2192 per collegare la configurazione rinnovo Per eseguire join da endpoint GET api/configurazione_mensile_locale o da GET api/configurazione_mensile_locale devo utilizzare la stringa \"locale_locale\" Per effettuare una join a partire dalla tabella contenente la chiave esterna, la stringa si compone in questo modo: \"[chiave]_[nome_altra_tabella]\" Per effettuare una join a partire dalla tabella senza la chiave esterna, la stringa si compone in questo modo: per comporre la stringa \u00e8 sufficente tradurre il pensiero tramite il campo abc collego la tabella def nella stringa abc_def Esempio La tabella configurazione_mensile_locale ha un campo locale che che contiene l'id di uno specifico record nella tabella locale, la query che dovr\u00f2 passare all'endpoint GET api/configurazione_mensile_locale/:id \u00e8 la seguente: { \"options\" :{ \"include\" :[ \"locale_locale\" ] } } Risponde alla frase: \"tramite il campo locale includo la tabella locale\" hasOne belongsTo","title":"Relazione 1:1"},{"location":"architettura/backend/casi-uso/crud/query/#relazione-1n","text":"belongsTo Esempio La tabella cliente ha un campo locale che che contiene l'id di uno specifico record nella tabella locale, la query che dovr\u00f2 passare all'endpoint GET api/cliente/:id \u00e8 la seguente: { \"options\" :{ \"include\" :[ \"locale_locale\" ] } } Risponde alla frase: \"tramite il campo locale includo la tabella locale\" La richiesta restituir\u00e0 un oggetto di questo tipo: { \"id\" : \"id_cliente\" \"nome\" : \"nome_cliente\" , \"ragsoc\" : \"ragione_sociale\" , ... , \"locale\" : \"id_locale\" , \"locale_locale\" :{ \"id_locale\" , ... } } Se per qualsiasi motivo non \u00e8 possibile collegare il cliente al locale il campo locale_locale sar\u00e0 null","title":"Relazione 1:N"},{"location":"architettura/backend/casi-uso/crud/query/#relazione-nm","text":"","title":"Relazione N:M"},{"location":"architettura/backend/casi-uso/crud/query/#nested-join","text":"Per effettuare join innestate \u00e8 necessario utilizzare un'altra strategia per include. In questo caso infatti la query dovr\u00e0 essere composta in questo modo: { \"options\" :{ \"include\" :{ \"model\" : \"nome_tabella\" , \"as\" : s tr i n ga di relazio ne , \"include\" : { \"model\" : \"nome_seconda_tabella\" , \"as\" : s tr i n ga di relazio ne } } } } Esempio La tabella cliente ha un campo locale che che contiene l'id di uno specifico record nella tabella locale e il locale ha un campo profilo_locale che contiene l'id di uno specifico record nella tabella profilo_locale, la query che dovr\u00f2 passare all'endpoint GET api/cliente/:id \u00e8 la seguente: { \"options\" :{ \"include\" :{ \"model\" : \"locale\" , \"as\" : \"locale_locale\" , \"include\" : { \"model\" : \"profilo_locale\" , \"as\" : \"profilo_locale_profilo_locale\" } } } } La richiesta restituir\u00e0 un oggetto di questo tipo: { \"id\" : \"id_cliente\" \"nome\" : \"nome_cliente\" , \"ragsoc\" : \"ragione_sociale\" , ... , \"locale\" : \"id_locale\" , \"locale_locale\" :{ \"id_locale\" , ... , \"profilo_locale\" : \"id_profilo_locale\" , \"profilo_locale_profilo_locale\" :{ \"id\" : \"id_profilo_locale\" , \"descrizione\" : \"descrizione_profilo_locale\" } } }","title":"Nested Join"},{"location":"architettura/backend/casi-uso/crud/query/#filtrare-where","text":"Per filtrare i risultati all'interno di una query \u00e8 possibile utilizzare l'opzione where: { \"options\" : { \"where\" : {} } } Filtro per uguaglianza Voglio ottenere tutti i locali che hanno profilo_locale = 4, la query che dovr\u00f2 passare all'endpoint GET api/locale \u00e8 la seguente: { \"options\" :{ \"where\" :{ \"profilo_locale\" : 4 } } }","title":"Filtrare (Where)"},{"location":"architettura/backend/casi-uso/crud/query/#operazioni-disponibili","text":"Oltre a filtrare per uguaglianza \u00e8 possibile inserire all'interno dell'opzione where una serie di specifiche stringhe che vengono poi mappate in operazioni sequelize, le operazioni disponibili sono: \"where\" : { \"and\" : [{ \"a\" : 5 }, { \"b\" : 6 }], // (a = 5) AND (b = 6) \"or\" : [{ \"a\" : 5 }, { \"b\" : 6 }], // (a = 5) OR (b = 6) \"attributo\" : { // Base \"eq\" : 3 , // = 3 \"ne\" : 20 , // != 20 \"is\" : null , // IS NULL \"not\" : true , // IS NOT TRUE \"or\" : [ 5 , 6 ], // (attributo = 5) OR (attributo = 6) // Specificare colonna \"col\" : 'user.orga n iza t io n _id' , // = \"user\".\"organization_id\" // Comparazione numerica \"gt\" : 6 , // > 6 \"gte\" : 6 , // >= 6 \"lt\" : 10 , // < 10 \"lte\" : 10 , // <= 10 \"between\" : [ 6 , 10 ], // BETWEEN 6 AND 10 \"notBetween\" : [ 11 , 15 ], // NOT BETWEEN 11 AND 15 // Altri operatori \"all\" : ... , // > ALL (...) \"in\" : [ 1 , 2 ], // IN [1, 2 \"notIn\" : [ 1 , 2 ], // NOT IN [1, 2 \"like\" : \"%hat\" , // LIKE '%hat' \"notLike\" : \"%hat\" , // NOT LIKE '%hat' \"startsWith\" : \"hat\" , // LIKE 'hat%' \"endsWith\" : \"hat\" , // LIKE '%hat' \"substring\" : \"hat\" , // LIKE '%hat%' } } Nested where Per filtrare una query basandosi su un campo annidato \u00e8 possibile utilizzare la seguente sintassi: $nested.column$ \"where\" : { \"$instruments.size$\" : { \"ne\" : \"small\" } },","title":"Operazioni disponibili"},{"location":"architettura/backend/casi-uso/crud/query/#ordinare-order-by","text":"l'opzione order permette di ordinare i risultati di una query, la sintassi da utilizzare \u00e8 la seguente \"order\" : [ \"nome_colonna\" , ASC | DESC ] \u00e8 possibile anche ordinare per pi\u00f9 di una colonna con la seguente sintassi: \"order\" :[ [ \"colonna1\" , ASC | DESC ], [ \"colonna2\" , ASC | DESC ] ]","title":"Ordinare (Order by)"},{"location":"architettura/backend/casi-uso/crud/query/#raggruppare-group-by","text":"l'opzione group permette di raggruppare i risultati di una query, la sintassi da utilizzare \u00e8 la seguente \"group\" : [ \"nome_colonna\" ] \u00e8 possibile anche raggruppare per pi\u00f9 di una colonna con la seguente sintassi: \"group\" :[ \"colonna1\" , \"colonna2\" ]","title":"Raggruppare (Group by)"},{"location":"architettura/database/","text":"Database I dati necessari al funzionamento dell'applicazione vengono memorizzati in un unico database SQL con DBMS Microsoft SQL Server, installato su un server proprietario con sistema Windows Server","title":"Database"},{"location":"architettura/database/#database","text":"I dati necessari al funzionamento dell'applicazione vengono memorizzati in un unico database SQL con DBMS Microsoft SQL Server, installato su un server proprietario con sistema Windows Server","title":"Database"},{"location":"architettura/database/er/","text":"Diagramma ER","title":"Diagramma ER"},{"location":"architettura/database/er/#diagramma-er","text":"","title":"Diagramma ER"},{"location":"architettura/database/schema/","text":"Schema article_change Id Descrizione Tipo Dimensione 1 articolo int 4 2 articolo_cambio int 4 article_parent Id Descrizione Tipo Dimensione 1 parent int 4 2 child int 4 articolo Id Descrizione Tipo Dimensione 1 id int 4 2 title nvarchar 200 3 descrizione nvarchar 2000 4 gruppo nvarchar 40 5 immagine nvarchar 490 6 id_trace nvarchar 490 7 costo decimal 9 8 data_insert datetime2 6 9 data_update datetime2 6 10 attivo binary 1 11 import_trace binary 1 12 need_serial binary 1 13 need_serial_grenke binary 1 14 mth_12 binary 1 15 mth_24 binary 1 16 mth_1 binary 1 17 new_year binary 1 18 tipo_articolo int 4 19 cassaincloud_id int 4 20 order_note binary 1 21 article_app_title nvarchar 2048 22 crea_intervento binary 1 23 support_telephone binary 1 24 support_week binary 1 articolo_cliente_ordine Id Descrizione Tipo Dimensione 1 ordine int 4 2 articolo int 4 3 prg int 4 4 attivazione date 3 5 matricola nvarchar 500 articolo_mensile Id Descrizione Tipo Dimensione 1 id int 4 2 mensile int 4 3 articolo int 4 4 price decimal 9 5 matricola nvarchar 490 6 t_trace int 4 articolo_ordine Id Descrizione Tipo Dimensione 1 id int 4 2 ordine int 4 3 articolo int 4 4 prezzo decimal 9 5 quantita int 4 6 sconto decimal 9 7 articolo_rinnovo int 4 8 date_esatto date 3 9 item_id_esatto int 4 articolo_proposta Id Descrizione Tipo Dimensione 1 id int 4 2 proposta int 4 3 articolo int 4 4 prezzo decimal 9 5 quantita int 4 6 sconto decimal 9 articolo_rinnovo Id Descrizione Tipo Dimensione 1 id int 4 2 rinnovo int 4 3 articolo int 4 4 prezzo decimal 9 5 matricola nvarchar 490 6 data_scadenza date 3 7 data_rinnovo date 3 8 t_trace int 4 9 sconto decimal 9 10 proponi binary 1 articolo_rinnovo_storico Id Descrizione Tipo Dimensione 1 id int 4 2 rinnovo int 4 3 articolo int 4 4 prezzo decimal 9 5 matricola varchar 245 6 data_scadenza date 3 7 data_rinnovo date 3 8 t_trace int 4 9 sconto decimal 9 10 proponi binary 1 11 data_inserimento date 3 attivazione_articolo_ordine Id Descrizione Tipo Dimensione 1 articolo_ordine int 4 2 prg int 4 3 attivazione date 3 cambio_piano Id Descrizione Tipo Dimensione 1 id int 4 2 articolo_precedente int 4 3 articolo_successivo int 4 4 prezzo_precedente decimal 9 5 prezzo_successivo decimal 9 6 cliente int 4 7 locale int 4 8 data datetime2 6 9 utente int 4 cliente Id Descrizione Tipo Dimensione 1 id int 4 2 id_trace nvarchar 20 3 nome_locale nvarchar 120 4 ragsoc nvarchar 120 5 via nvarchar 510 6 cap nvarchar 20 7 citta nvarchar 200 8 provincia nvarchar 100 9 piva nvarchar 32 10 codfisc nvarchar 32 11 tel nvarchar 36 12 cell nvarchar 36 13 mail nvarchar 510 14 contatto nvarchar 80 15 notecli nvarchar -1 16 notepriv nvarchar 300 17 utente_scaduto int 4 18 pagamento nvarchar 40 19 pec nvarchar 200 20 sdi nvarchar 14 21 data_insert date 3 22 data_update date 3 23 iban nvarchar 500 24 app_pwd nvarchar 100 25 iva_esente binary 1 configurazione_mensile_locale Id Descrizione Tipo Dimensione 1 locale int 4 2 pagamento int 4 3 note varchar 1024 4 fatturazione_alternativa int 4 configurazione_rinnovo_locale Id Descrizione Tipo Dimensione 1 locale int 4 2 pagamento int 4 3 note varchar 1024 4 tacito_rinnovo binary 1 5 fatturazione_alternativa int 4 contatto Id Descrizione Tipo Dimensione 1 id int 4 2 cliente int 4 3 id_trace nvarchar 100 4 locale int 4 5 prg int 4 6 all_location int 4 7 mail nvarchar 490 8 telephone nvarchar 490 9 reference nvarchar 490 10 date_update datetime2 6 11 active int 4 12 profilo_contatto int 4 costruttore Id Descrizione Tipo Dimensione 1 articolo int 4 2 nome nvarchar 100 disdetta Id Descrizione Tipo Dimensione 1 id int 4 2 articolo int 4 3 prezzo decimal 9 4 matricola nvarchar 490 5 data_scadenza date 3 6 data_cancellazione datetime2 6 7 cliente int 4 8 locale int 4 9 motivazione int 4 10 utente int 4 11 note nvarchar 490 gruppo Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 200 3 tipo_gruppo int 4 4 aggiungi_a_rinnovo binary 1 5 aggiungi_a_cliente binary 1 6 mostra_a_zero binary 1 7 importa_a_zero binary 1 8 not_ratei_risconti binary 1 9 id_trace nvarchar 40 gruppo_cassaincloud Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 locale Id Descrizione Tipo Dimensione 1 id int 4 2 nome nvarchar 200 3 via nvarchar 510 4 citta nvarchar 200 5 cap nvarchar 490 6 prov nvarchar 20 7 tel nvarchar 100 8 mail nvarchar 510 9 contact nvarchar 200 10 cliente int 4 11 piva nvarchar 32 12 type_sede nvarchar 2 13 prg int 4 14 data_insert datetime2 6 15 data_update datetime2 6 16 profilo_locale int 4 17 note nvarchar 490 18 obsoleto date 3 19 iban nvarchar 100 macro_tipo_articolo Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 3 reparto int 4 matricola_articolo_ordine Id Descrizione Tipo Dimensione 1 articolo_ordine int 4 2 prg int 4 3 matricola nvarchar 100 mensile Id Descrizione Tipo Dimensione 1 id int 4 2 cliente int 4 3 cliente_fatt_alt int 4 4 date_billing date 3 5 next_billing date 3 6 locale int 4 7 creation_date date 3 8 tipo_fatturazione int 4 9 pagamento nvarchar 490 10 note nvarchar 2048 11 group_billing binary 1 motivazione Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 490 numbers Id Descrizione Tipo Dimensione 1 number int 4 ordine Id Descrizione Tipo Dimensione 1 id int 4 2 data date 3 3 cliente_fatt_alt int 4 4 cliente int 4 5 locale int 4 6 utente int 4 7 totale decimal 9 8 date_insert datetime2 6 9 date_lastupdate datetime2 6 10 tipo int 4 11 is_closed binary 1 12 stato int 4 13 data_consegna date 3 14 note_amministrative nvarchar 1000 15 pagamento int 4 16 utente_lastupdate int 4 17 tecnico int 4 18 note_pagamento nvarchar 2048 19 data_evasione date 3 20 order_id_esatto nvarchar 100 21 data_fatturazione date 3 22 utente_mail int 4 23 note_tecniche nvarchar 1000 24 has_rid binary 1 25 rid_date date 3 26 down_payment decimal 9 27 down_payment_type int 4 28 rinnovo int 4 29 mensile int 4 30 note_fattura nvarchar 1000 31 tipo_fatturazione int 4 32 grenke binary 1 33 cancellato binary 1 34 down_payment_for int 4 35 invoice_nr nvarchar 2048 36 impegno_nr int 4 37 invoice_id nvarchar 200 38 wait_payment binary 1 pagamento_mensile Id Descrizione Tipo Dimensione 1 pagamento nvarchar 10 2 attivo binary 1 prezzo Id Descrizione Tipo Dimensione 1 id int 4 2 cod_art nvarchar 490 3 cod_listino nvarchar 100 4 prg_listino int 4 5 prz_listino decimal 9 6 data_insert datetime2 6 7 data_update datetime2 6 8 articolo int 4 profilo_contatto Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 90 profilo_locale Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 proposta Id Descrizione Tipo Dimensione 1 id int 4 2 data datetime2 6 3 cliente int 4 4 locale int 4 5 utente int 4 6 totale decimal 9 7 date_insert datetime2 6 8 date_lastupdate datetime2 6 9 pagamento int 4 10 utente_lastupdate int 4 11 utente_mail int 4 12 mese date 3 reparto Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 rinnovo Id Descrizione Tipo Dimensione 1 id int 4 2 cliente int 4 3 fatt_alternativa int 4 4 locale int 4 5 mese date 3 6 ordine_generato int 4 7 note nvarchar 2048 8 pagamento int 4 9 ricorrente binary 1 10 mail_inviata binary 1 11 completato binary 1 stato Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 490 3 nascondi binary 1 t_payment_esatto Id Descrizione Tipo Dimensione 1 cod_pag nvarchar 20 2 cod_pag_NEW int 4 3 des_pag nvarchar 100 4 val_spese_inc decimal 9 5 cod_tipopag int 4 6 des_tipo_pag nvarchar 100 7 num_rate int 4 8 ind_data_scad int 4 9 num_giorni int 4 t_trace Id Descrizione Tipo Dimensione 1 id int 4 2 order_id int 4 3 order_type_id int 4 4 customer_for_billing nvarchar 100 5 customer_id nvarchar 100 6 prg_location int 4 7 article_id nvarchar 490 8 price decimal 9 9 serial_number nvarchar 100 10 installation_date date 3 11 due_date_maintenance date 3 12 deleted int 4 13 date_import_trace datetime2 6 14 date_import_rinnovi date 3 15 date_import_monthly datetime2 6 16 trace_id int 4 17 monthly_id int 4 18 type_billing int 4 19 payment_type nvarchar 490 20 create_operation int 4 tipo_articolo Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 3 macro_tipo_articolo int 4 4 cassaincloud binary 1 tipo_fatturazione Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 3 mesi int 4 tipo_gruppo Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 200 3 magazzino binary 1 4 ordine int 4 tipo_ordine Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 200 3 rinnovo binary 1 utente Id Descrizione Tipo Dimensione 1 id int 4 2 name nvarchar 40 3 password nvarchar 100 4 nickname nvarchar 100 5 sigillo nvarchar 12 6 mail nvarchar 100","title":"Schema"},{"location":"architettura/database/schema/#schema","text":"","title":"Schema"},{"location":"architettura/database/schema/#article_change","text":"Id Descrizione Tipo Dimensione 1 articolo int 4 2 articolo_cambio int 4","title":"article_change"},{"location":"architettura/database/schema/#article_parent","text":"Id Descrizione Tipo Dimensione 1 parent int 4 2 child int 4","title":"article_parent"},{"location":"architettura/database/schema/#articolo","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 title nvarchar 200 3 descrizione nvarchar 2000 4 gruppo nvarchar 40 5 immagine nvarchar 490 6 id_trace nvarchar 490 7 costo decimal 9 8 data_insert datetime2 6 9 data_update datetime2 6 10 attivo binary 1 11 import_trace binary 1 12 need_serial binary 1 13 need_serial_grenke binary 1 14 mth_12 binary 1 15 mth_24 binary 1 16 mth_1 binary 1 17 new_year binary 1 18 tipo_articolo int 4 19 cassaincloud_id int 4 20 order_note binary 1 21 article_app_title nvarchar 2048 22 crea_intervento binary 1 23 support_telephone binary 1 24 support_week binary 1","title":"articolo"},{"location":"architettura/database/schema/#articolo_cliente_ordine","text":"Id Descrizione Tipo Dimensione 1 ordine int 4 2 articolo int 4 3 prg int 4 4 attivazione date 3 5 matricola nvarchar 500","title":"articolo_cliente_ordine"},{"location":"architettura/database/schema/#articolo_mensile","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 mensile int 4 3 articolo int 4 4 price decimal 9 5 matricola nvarchar 490 6 t_trace int 4","title":"articolo_mensile"},{"location":"architettura/database/schema/#articolo_ordine","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 ordine int 4 3 articolo int 4 4 prezzo decimal 9 5 quantita int 4 6 sconto decimal 9 7 articolo_rinnovo int 4 8 date_esatto date 3 9 item_id_esatto int 4","title":"articolo_ordine"},{"location":"architettura/database/schema/#articolo_proposta","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 proposta int 4 3 articolo int 4 4 prezzo decimal 9 5 quantita int 4 6 sconto decimal 9","title":"articolo_proposta"},{"location":"architettura/database/schema/#articolo_rinnovo","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 rinnovo int 4 3 articolo int 4 4 prezzo decimal 9 5 matricola nvarchar 490 6 data_scadenza date 3 7 data_rinnovo date 3 8 t_trace int 4 9 sconto decimal 9 10 proponi binary 1","title":"articolo_rinnovo"},{"location":"architettura/database/schema/#articolo_rinnovo_storico","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 rinnovo int 4 3 articolo int 4 4 prezzo decimal 9 5 matricola varchar 245 6 data_scadenza date 3 7 data_rinnovo date 3 8 t_trace int 4 9 sconto decimal 9 10 proponi binary 1 11 data_inserimento date 3","title":"articolo_rinnovo_storico"},{"location":"architettura/database/schema/#attivazione_articolo_ordine","text":"Id Descrizione Tipo Dimensione 1 articolo_ordine int 4 2 prg int 4 3 attivazione date 3","title":"attivazione_articolo_ordine"},{"location":"architettura/database/schema/#cambio_piano","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 articolo_precedente int 4 3 articolo_successivo int 4 4 prezzo_precedente decimal 9 5 prezzo_successivo decimal 9 6 cliente int 4 7 locale int 4 8 data datetime2 6 9 utente int 4","title":"cambio_piano"},{"location":"architettura/database/schema/#cliente","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 id_trace nvarchar 20 3 nome_locale nvarchar 120 4 ragsoc nvarchar 120 5 via nvarchar 510 6 cap nvarchar 20 7 citta nvarchar 200 8 provincia nvarchar 100 9 piva nvarchar 32 10 codfisc nvarchar 32 11 tel nvarchar 36 12 cell nvarchar 36 13 mail nvarchar 510 14 contatto nvarchar 80 15 notecli nvarchar -1 16 notepriv nvarchar 300 17 utente_scaduto int 4 18 pagamento nvarchar 40 19 pec nvarchar 200 20 sdi nvarchar 14 21 data_insert date 3 22 data_update date 3 23 iban nvarchar 500 24 app_pwd nvarchar 100 25 iva_esente binary 1","title":"cliente"},{"location":"architettura/database/schema/#configurazione_mensile_locale","text":"Id Descrizione Tipo Dimensione 1 locale int 4 2 pagamento int 4 3 note varchar 1024 4 fatturazione_alternativa int 4","title":"configurazione_mensile_locale"},{"location":"architettura/database/schema/#configurazione_rinnovo_locale","text":"Id Descrizione Tipo Dimensione 1 locale int 4 2 pagamento int 4 3 note varchar 1024 4 tacito_rinnovo binary 1 5 fatturazione_alternativa int 4","title":"configurazione_rinnovo_locale"},{"location":"architettura/database/schema/#contatto","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 cliente int 4 3 id_trace nvarchar 100 4 locale int 4 5 prg int 4 6 all_location int 4 7 mail nvarchar 490 8 telephone nvarchar 490 9 reference nvarchar 490 10 date_update datetime2 6 11 active int 4 12 profilo_contatto int 4","title":"contatto"},{"location":"architettura/database/schema/#costruttore","text":"Id Descrizione Tipo Dimensione 1 articolo int 4 2 nome nvarchar 100","title":"costruttore"},{"location":"architettura/database/schema/#disdetta","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 articolo int 4 3 prezzo decimal 9 4 matricola nvarchar 490 5 data_scadenza date 3 6 data_cancellazione datetime2 6 7 cliente int 4 8 locale int 4 9 motivazione int 4 10 utente int 4 11 note nvarchar 490","title":"disdetta"},{"location":"architettura/database/schema/#gruppo","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 200 3 tipo_gruppo int 4 4 aggiungi_a_rinnovo binary 1 5 aggiungi_a_cliente binary 1 6 mostra_a_zero binary 1 7 importa_a_zero binary 1 8 not_ratei_risconti binary 1 9 id_trace nvarchar 40","title":"gruppo"},{"location":"architettura/database/schema/#gruppo_cassaincloud","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100","title":"gruppo_cassaincloud"},{"location":"architettura/database/schema/#locale","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 nome nvarchar 200 3 via nvarchar 510 4 citta nvarchar 200 5 cap nvarchar 490 6 prov nvarchar 20 7 tel nvarchar 100 8 mail nvarchar 510 9 contact nvarchar 200 10 cliente int 4 11 piva nvarchar 32 12 type_sede nvarchar 2 13 prg int 4 14 data_insert datetime2 6 15 data_update datetime2 6 16 profilo_locale int 4 17 note nvarchar 490 18 obsoleto date 3 19 iban nvarchar 100","title":"locale"},{"location":"architettura/database/schema/#macro_tipo_articolo","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 3 reparto int 4","title":"macro_tipo_articolo"},{"location":"architettura/database/schema/#matricola_articolo_ordine","text":"Id Descrizione Tipo Dimensione 1 articolo_ordine int 4 2 prg int 4 3 matricola nvarchar 100","title":"matricola_articolo_ordine"},{"location":"architettura/database/schema/#mensile","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 cliente int 4 3 cliente_fatt_alt int 4 4 date_billing date 3 5 next_billing date 3 6 locale int 4 7 creation_date date 3 8 tipo_fatturazione int 4 9 pagamento nvarchar 490 10 note nvarchar 2048 11 group_billing binary 1","title":"mensile"},{"location":"architettura/database/schema/#motivazione","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 490","title":"motivazione"},{"location":"architettura/database/schema/#numbers","text":"Id Descrizione Tipo Dimensione 1 number int 4","title":"numbers"},{"location":"architettura/database/schema/#ordine","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 data date 3 3 cliente_fatt_alt int 4 4 cliente int 4 5 locale int 4 6 utente int 4 7 totale decimal 9 8 date_insert datetime2 6 9 date_lastupdate datetime2 6 10 tipo int 4 11 is_closed binary 1 12 stato int 4 13 data_consegna date 3 14 note_amministrative nvarchar 1000 15 pagamento int 4 16 utente_lastupdate int 4 17 tecnico int 4 18 note_pagamento nvarchar 2048 19 data_evasione date 3 20 order_id_esatto nvarchar 100 21 data_fatturazione date 3 22 utente_mail int 4 23 note_tecniche nvarchar 1000 24 has_rid binary 1 25 rid_date date 3 26 down_payment decimal 9 27 down_payment_type int 4 28 rinnovo int 4 29 mensile int 4 30 note_fattura nvarchar 1000 31 tipo_fatturazione int 4 32 grenke binary 1 33 cancellato binary 1 34 down_payment_for int 4 35 invoice_nr nvarchar 2048 36 impegno_nr int 4 37 invoice_id nvarchar 200 38 wait_payment binary 1","title":"ordine"},{"location":"architettura/database/schema/#pagamento_mensile","text":"Id Descrizione Tipo Dimensione 1 pagamento nvarchar 10 2 attivo binary 1","title":"pagamento_mensile"},{"location":"architettura/database/schema/#prezzo","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 cod_art nvarchar 490 3 cod_listino nvarchar 100 4 prg_listino int 4 5 prz_listino decimal 9 6 data_insert datetime2 6 7 data_update datetime2 6 8 articolo int 4","title":"prezzo"},{"location":"architettura/database/schema/#profilo_contatto","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 90","title":"profilo_contatto"},{"location":"architettura/database/schema/#profilo_locale","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100","title":"profilo_locale"},{"location":"architettura/database/schema/#proposta","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 data datetime2 6 3 cliente int 4 4 locale int 4 5 utente int 4 6 totale decimal 9 7 date_insert datetime2 6 8 date_lastupdate datetime2 6 9 pagamento int 4 10 utente_lastupdate int 4 11 utente_mail int 4 12 mese date 3","title":"proposta"},{"location":"architettura/database/schema/#reparto","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100","title":"reparto"},{"location":"architettura/database/schema/#rinnovo","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 cliente int 4 3 fatt_alternativa int 4 4 locale int 4 5 mese date 3 6 ordine_generato int 4 7 note nvarchar 2048 8 pagamento int 4 9 ricorrente binary 1 10 mail_inviata binary 1 11 completato binary 1","title":"rinnovo"},{"location":"architettura/database/schema/#stato","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 490 3 nascondi binary 1","title":"stato"},{"location":"architettura/database/schema/#t_payment_esatto","text":"Id Descrizione Tipo Dimensione 1 cod_pag nvarchar 20 2 cod_pag_NEW int 4 3 des_pag nvarchar 100 4 val_spese_inc decimal 9 5 cod_tipopag int 4 6 des_tipo_pag nvarchar 100 7 num_rate int 4 8 ind_data_scad int 4 9 num_giorni int 4","title":"t_payment_esatto"},{"location":"architettura/database/schema/#t_trace","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 order_id int 4 3 order_type_id int 4 4 customer_for_billing nvarchar 100 5 customer_id nvarchar 100 6 prg_location int 4 7 article_id nvarchar 490 8 price decimal 9 9 serial_number nvarchar 100 10 installation_date date 3 11 due_date_maintenance date 3 12 deleted int 4 13 date_import_trace datetime2 6 14 date_import_rinnovi date 3 15 date_import_monthly datetime2 6 16 trace_id int 4 17 monthly_id int 4 18 type_billing int 4 19 payment_type nvarchar 490 20 create_operation int 4","title":"t_trace"},{"location":"architettura/database/schema/#tipo_articolo","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 3 macro_tipo_articolo int 4 4 cassaincloud binary 1","title":"tipo_articolo"},{"location":"architettura/database/schema/#tipo_fatturazione","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 100 3 mesi int 4","title":"tipo_fatturazione"},{"location":"architettura/database/schema/#tipo_gruppo","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 200 3 magazzino binary 1 4 ordine int 4","title":"tipo_gruppo"},{"location":"architettura/database/schema/#tipo_ordine","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 descrizione nvarchar 200 3 rinnovo binary 1","title":"tipo_ordine"},{"location":"architettura/database/schema/#utente","text":"Id Descrizione Tipo Dimensione 1 id int 4 2 name nvarchar 40 3 password nvarchar 100 4 nickname nvarchar 100 5 sigillo nvarchar 12 6 mail nvarchar 100","title":"utente"},{"location":"autenticazione/","text":"Autenticazione In questo progetto \u00e8 necessario che gli utenti abbiano accesso ai diversi componenti e che i componenti possano identificare qual'\u00e8 l'utente con il quale sta lavorando al momento per gestirne correttamente i privilegi e le preferenze. Auth0 Il servizio utilizzato per la gestione degli utenti \u00e8 Auth0 che utilizza lo standard Oauth 2.0 per la gestione dell'autenticazione tramite Access Token in formato JSON Web Token JSON Web Token (JWT) Definizione da https://jwt.io/ JSON Web Tokens are an open, industry standard RFC 7519 method for representing claims securely between two parties. Un Token non \u00e8 nient'altro che una particolare stringa di lunghezza variabile contenente diverse informazioni legate ad uno specifico utente, che viene firmata in modo tale da non permetterne la modifica. Questo token viene passato insieme alle richieste e permette non solo di stabilire se l'utente ha accesso ad una risorsa ma anche di estrarre immediatamente diverse informazioni come: privilegi, preferenze o altro.","title":"Autenticazione"},{"location":"autenticazione/#autenticazione","text":"In questo progetto \u00e8 necessario che gli utenti abbiano accesso ai diversi componenti e che i componenti possano identificare qual'\u00e8 l'utente con il quale sta lavorando al momento per gestirne correttamente i privilegi e le preferenze.","title":"Autenticazione"},{"location":"autenticazione/#auth0","text":"Il servizio utilizzato per la gestione degli utenti \u00e8 Auth0 che utilizza lo standard Oauth 2.0 per la gestione dell'autenticazione tramite Access Token in formato JSON Web Token","title":"Auth0"},{"location":"autenticazione/#json-web-token-jwt","text":"Definizione da https://jwt.io/ JSON Web Tokens are an open, industry standard RFC 7519 method for representing claims securely between two parties. Un Token non \u00e8 nient'altro che una particolare stringa di lunghezza variabile contenente diverse informazioni legate ad uno specifico utente, che viene firmata in modo tale da non permetterne la modifica. Questo token viene passato insieme alle richieste e permette non solo di stabilire se l'utente ha accesso ad una risorsa ma anche di estrarre immediatamente diverse informazioni come: privilegi, preferenze o altro.","title":"JSON Web Token (JWT)"},{"location":"autenticazione/auth0-config/","text":"Configurazione Auth0 Auth0 \u00e8 stato configurato appositamente per la gestione dei diversi componenti. Tenant Uno dei concetti principali di Auth0 \u00e8 il tenant, un tenant non \u00e8 nient'altro che un contenitore per tutte le configurazioni dedicate ad una applicazione. Diverse applicazioni possono condividere lo stesso tenant condividendo in questo modo anche gli utenti e permettendogli con un unico accesso di utilizzare tutte le applicazioni ad esso collegate. Il tenant utilizzato \u00e8 denominato rca-api e al suo interno contiene 2 api e 2 applicazioni. Api All'interno di Auth0 un'Api \u00e8 un'entit\u00e0 che rappresenta una risorsa capace di accettare e rispondere a richieste protette effettuate dalle Applicazioni. RcaApi Rappresenta il backend come risorsa, permette di definire i privilegi con i quali i vari utenti hanno accesso al software di backend e alle risorse in esso contenute. Auth0 Management Api Questa Api rappresenta un entit\u00e0 di Auth0 e non pu\u00f2 essere modificata, questa entit\u00e0 serve per ottenere informazioni sugli utenti memorizzati ed effettuare altre operazioni su Auth0 da un'applicazione esterna. Applicazioni Il termine applicazione o app in Auth0 non implica particolari caratteristiche di implementazione. Ad esempio, potrebbe essere un'app nativa eseguita su un dispositivo mobile, una Single Page Application eseguita su un browser o una normale applicazione Web eseguita su un server. T-Order (Single Page Application - neJrFUZ5g8aD4hDHLMxiiyY2xLvuOGmB) Questa applicazione rappresenta il software di frontend ed \u00e8 una Single Page Application che viene eseguita direttamente del browser. Utilizza un plugin fornito da Auth0 per gestire l'autenticazione. Note Quando viene richiesto un token di accesso al backend tramite invio di username e password il backend si identifica come questa applicazione per effettuare la richiesta del token ad Auth0. RcaApi (Machine to Machine - pZOMvk3hvJfEAyxObluzciFQvnpb66tH) Il Software di backend per poter avere accesso agli utenti del tenant deve identificarsi come un'applicazione che ha accesso ad Auth0 Management Api, per questo motivo \u00e8 stata configurata questa Machine to Machine application a nome della quale il software di backend effettua le richieste.","title":"Configurazione Auth0"},{"location":"autenticazione/auth0-config/#configurazione-auth0","text":"Auth0 \u00e8 stato configurato appositamente per la gestione dei diversi componenti.","title":"Configurazione Auth0"},{"location":"autenticazione/auth0-config/#tenant","text":"Uno dei concetti principali di Auth0 \u00e8 il tenant, un tenant non \u00e8 nient'altro che un contenitore per tutte le configurazioni dedicate ad una applicazione. Diverse applicazioni possono condividere lo stesso tenant condividendo in questo modo anche gli utenti e permettendogli con un unico accesso di utilizzare tutte le applicazioni ad esso collegate. Il tenant utilizzato \u00e8 denominato rca-api e al suo interno contiene 2 api e 2 applicazioni.","title":"Tenant"},{"location":"autenticazione/auth0-config/#api","text":"All'interno di Auth0 un'Api \u00e8 un'entit\u00e0 che rappresenta una risorsa capace di accettare e rispondere a richieste protette effettuate dalle Applicazioni.","title":"Api"},{"location":"autenticazione/auth0-config/#rcaapi","text":"Rappresenta il backend come risorsa, permette di definire i privilegi con i quali i vari utenti hanno accesso al software di backend e alle risorse in esso contenute.","title":"RcaApi"},{"location":"autenticazione/auth0-config/#auth0-management-api","text":"Questa Api rappresenta un entit\u00e0 di Auth0 e non pu\u00f2 essere modificata, questa entit\u00e0 serve per ottenere informazioni sugli utenti memorizzati ed effettuare altre operazioni su Auth0 da un'applicazione esterna.","title":"Auth0 Management Api"},{"location":"autenticazione/auth0-config/#applicazioni","text":"Il termine applicazione o app in Auth0 non implica particolari caratteristiche di implementazione. Ad esempio, potrebbe essere un'app nativa eseguita su un dispositivo mobile, una Single Page Application eseguita su un browser o una normale applicazione Web eseguita su un server.","title":"Applicazioni"},{"location":"autenticazione/auth0-config/#t-order","text":"(Single Page Application - neJrFUZ5g8aD4hDHLMxiiyY2xLvuOGmB) Questa applicazione rappresenta il software di frontend ed \u00e8 una Single Page Application che viene eseguita direttamente del browser. Utilizza un plugin fornito da Auth0 per gestire l'autenticazione. Note Quando viene richiesto un token di accesso al backend tramite invio di username e password il backend si identifica come questa applicazione per effettuare la richiesta del token ad Auth0.","title":"T-Order"},{"location":"autenticazione/auth0-config/#rcaapi_1","text":"(Machine to Machine - pZOMvk3hvJfEAyxObluzciFQvnpb66tH) Il Software di backend per poter avere accesso agli utenti del tenant deve identificarsi come un'applicazione che ha accesso ad Auth0 Management Api, per questo motivo \u00e8 stata configurata questa Machine to Machine application a nome della quale il software di backend effettua le richieste.","title":"RcaApi"},{"location":"autenticazione/utenti/","text":"Utenti Solo gli utenti registrati hanno accesso ai servizi di T-Order e la registrazione di nuovi utenti pu\u00f2 avvenire, attualmente, solo tramite il pannello di controllo di Auth0. Ad ogni utente vengono fornite le proprie credenziali sotto forma di username e password. In base alle credenziali viene fornito un Token al portatore che deve essere utilizzato per effettuare le richieste a nome di quell'utente.","title":"Utenti"},{"location":"autenticazione/utenti/#utenti","text":"Solo gli utenti registrati hanno accesso ai servizi di T-Order e la registrazione di nuovi utenti pu\u00f2 avvenire, attualmente, solo tramite il pannello di controllo di Auth0. Ad ogni utente vengono fornite le proprie credenziali sotto forma di username e password. In base alle credenziali viene fornito un Token al portatore che deve essere utilizzato per effettuare le richieste a nome di quell'utente.","title":"Utenti"},{"location":"autenticazione/utenti/generazione-utente/","text":"Generazione utente Ogni utente deve essere generato dal pannello di controllo di Auth0 e poi correttamente configurato, la procedura completa per l'inserimento di un nuovo utente \u00e8 la seguente: Creazione utente Auth0 Inserimento utente all'interno del database Inserimento metadati utente in Auth0 Creazione utente Auth0 Tramite il pannello di controllo di Auth0 nella sezione User Management / User cliccare sul pulsante Create User Inserire e-mail e password, lasciare selezionato Username-Password-Authentication e fare click su Create . Inserimento utente all'interno del database Ogni utente presente all'interno di Auth0 deve corrispondere ad uno specifico record della tabella utente del database. L'id dell'utente del database viene salvato fra i metadati dell'utente di Auth0, in questo modo \u00e8 possibile creare relazioni all'interno del database con uno specifico utente e ricollegarlo all'utente Auth0. Inserimento metadati utente in Auth0 Nel pannello di controllo di Auth0 \u00e8 possibile assegnare dei metadati ad uno specifico utente, questi metadati tramite alcune regole specifiche definite nella sezione Auth Pipeline / Rules vengono inseriti all'interno del token per poi essere utilizzati dalle applicazioni per diversi scopi. Esempio configurazione { //riferimento id tabella utente database matching_id: 1, nome_utente: Andrea Brioschi, mail_utente: andrea.brioschi@rcamilano.it, //utilizzato per personalizzare il frontend preferenze: { ordini: { //stati selezionati al primo caricamento lista ordini activeStates: [ 2, 3, 7 ], //mostra ordini cancellati showDeleted: false, //mostra ordini fatturati showBilled: true, toggleStatus: true, //ricerca ragione sociale ragsoc: , //ricerca id ordine ordine: , //ricerca id utente utente: 0, //ricerca id tecnico tecnico: 0, all_status: false } }, //utilizzato in backend per invio mail riceve_mail: { errore_conferma_cliente: true } }","title":"Generazione Utente"},{"location":"autenticazione/utenti/generazione-utente/#generazione-utente","text":"Ogni utente deve essere generato dal pannello di controllo di Auth0 e poi correttamente configurato, la procedura completa per l'inserimento di un nuovo utente \u00e8 la seguente: Creazione utente Auth0 Inserimento utente all'interno del database Inserimento metadati utente in Auth0","title":"Generazione utente"},{"location":"autenticazione/utenti/generazione-utente/#creazione-utente-auth0","text":"Tramite il pannello di controllo di Auth0 nella sezione User Management / User cliccare sul pulsante Create User Inserire e-mail e password, lasciare selezionato Username-Password-Authentication e fare click su Create .","title":"Creazione utente Auth0"},{"location":"autenticazione/utenti/generazione-utente/#inserimento-utente-allinterno-del-database","text":"Ogni utente presente all'interno di Auth0 deve corrispondere ad uno specifico record della tabella utente del database. L'id dell'utente del database viene salvato fra i metadati dell'utente di Auth0, in questo modo \u00e8 possibile creare relazioni all'interno del database con uno specifico utente e ricollegarlo all'utente Auth0.","title":"Inserimento utente all'interno del database"},{"location":"autenticazione/utenti/generazione-utente/#inserimento-metadati-utente-in-auth0","text":"Nel pannello di controllo di Auth0 \u00e8 possibile assegnare dei metadati ad uno specifico utente, questi metadati tramite alcune regole specifiche definite nella sezione Auth Pipeline / Rules vengono inseriti all'interno del token per poi essere utilizzati dalle applicazioni per diversi scopi.","title":"Inserimento metadati utente in Auth0"},{"location":"autenticazione/utenti/generazione-utente/#esempio-configurazione","text":"{ //riferimento id tabella utente database matching_id: 1, nome_utente: Andrea Brioschi, mail_utente: andrea.brioschi@rcamilano.it, //utilizzato per personalizzare il frontend preferenze: { ordini: { //stati selezionati al primo caricamento lista ordini activeStates: [ 2, 3, 7 ], //mostra ordini cancellati showDeleted: false, //mostra ordini fatturati showBilled: true, toggleStatus: true, //ricerca ragione sociale ragsoc: , //ricerca id ordine ordine: , //ricerca id utente utente: 0, //ricerca id tecnico tecnico: 0, all_status: false } }, //utilizzato in backend per invio mail riceve_mail: { errore_conferma_cliente: true } }","title":"Esempio configurazione"},{"location":"autenticazione/utenti/privilegi-ruoli/","text":"Privilegi e Ruoli I ruoli e privilegi in Auth0 sono specifici per ogni API e devono essere configurati dal pannello di controllo di Auth0. I privilegi di un utente fanno parte delle informazioni contenute all'interno del Token, in questo modo sia frontend che backend sono consapevoli dei privilegi di ogni utente e possono adattarsi di conseguenza. Ogni utente appena generato non ha alcun ruolo ne privilegio. Creazione Prima di assegnarli ad un utente \u00e8 necessario creare i ruoli e i privilegi. Creazione Privilegi Per creare un nuovo privilegio \u00e8 necessario recarsi nella sezione Applications / APIs , selezionare RcaApi e poi cliccare sul tab Permissions , aggiungere il nome e la descrizione del permesso e poi premere Add Creazione Ruoli Per creare un nuovo ruolo \u00e8 necessario recarsi nella sezione User Management / Roles e fare click su Create Role , inserire nome e descrizione e cliccare su create. In questo modo verr\u00e0 creato un nuovo ruolo senza alcun privilegio, per assegnare i privilegi al ruolo cliccare sul nome del ruolo appena creato e poi sul tab Permissions , facendo click sul pulsante Add Permissions e selezionando RcaApi sar\u00e0 possibile aggiungere un privilegio al ruolo. Assegnamento Dopo aver definito i ruoi e i privilegi per l'API \u00e8 possibile assegnarli agli utenti Assegnamento Privilegi Per assegnare dei privilegi ad un utente \u00e8 necessario recarsi nella sezione User Management / User / $UTENTE e cliccare sul tab Permissions . Dopo di che fare click su Assign Permission e selezionare le Api RcaApi selezionare uno specifico permesso e cliccare Add Permission Per configurare i privilegi in gruppo \u00e8 possibile utilizzare i Ruoli. Assegnamento Ruoli Un ruolo permette di gestire molteplici privilegi in contemporanea, e possibile infatti definire un ruolo selezionando i privilegi di quello specifico ruolo per poi assegnarlo all'utente assegnandogli in questo modo tutti i permessi di quel ruolo contemporaneamente. Un utente pu\u00f2 avere pi\u00f9 ruoli. Per assegnare un ruolo ad un utente \u00e8 necessario recarsi nella sezione User Management / User / $UTENTE e cliccare sul tab Permissions . Dopo di che fare click su Assign Roles e selezionare il ruolo desiderato e cliccare Add Permission","title":"Privilegi e Ruoli"},{"location":"autenticazione/utenti/privilegi-ruoli/#privilegi-e-ruoli","text":"I ruoli e privilegi in Auth0 sono specifici per ogni API e devono essere configurati dal pannello di controllo di Auth0. I privilegi di un utente fanno parte delle informazioni contenute all'interno del Token, in questo modo sia frontend che backend sono consapevoli dei privilegi di ogni utente e possono adattarsi di conseguenza. Ogni utente appena generato non ha alcun ruolo ne privilegio.","title":"Privilegi e Ruoli"},{"location":"autenticazione/utenti/privilegi-ruoli/#creazione","text":"Prima di assegnarli ad un utente \u00e8 necessario creare i ruoli e i privilegi.","title":"Creazione"},{"location":"autenticazione/utenti/privilegi-ruoli/#creazione-privilegi","text":"Per creare un nuovo privilegio \u00e8 necessario recarsi nella sezione Applications / APIs , selezionare RcaApi e poi cliccare sul tab Permissions , aggiungere il nome e la descrizione del permesso e poi premere Add","title":"Creazione Privilegi"},{"location":"autenticazione/utenti/privilegi-ruoli/#creazione-ruoli","text":"Per creare un nuovo ruolo \u00e8 necessario recarsi nella sezione User Management / Roles e fare click su Create Role , inserire nome e descrizione e cliccare su create. In questo modo verr\u00e0 creato un nuovo ruolo senza alcun privilegio, per assegnare i privilegi al ruolo cliccare sul nome del ruolo appena creato e poi sul tab Permissions , facendo click sul pulsante Add Permissions e selezionando RcaApi sar\u00e0 possibile aggiungere un privilegio al ruolo.","title":"Creazione Ruoli"},{"location":"autenticazione/utenti/privilegi-ruoli/#assegnamento","text":"Dopo aver definito i ruoi e i privilegi per l'API \u00e8 possibile assegnarli agli utenti","title":"Assegnamento"},{"location":"autenticazione/utenti/privilegi-ruoli/#assegnamento-privilegi","text":"Per assegnare dei privilegi ad un utente \u00e8 necessario recarsi nella sezione User Management / User / $UTENTE e cliccare sul tab Permissions . Dopo di che fare click su Assign Permission e selezionare le Api RcaApi selezionare uno specifico permesso e cliccare Add Permission Per configurare i privilegi in gruppo \u00e8 possibile utilizzare i Ruoli.","title":"Assegnamento Privilegi"},{"location":"autenticazione/utenti/privilegi-ruoli/#assegnamento-ruoli","text":"Un ruolo permette di gestire molteplici privilegi in contemporanea, e possibile infatti definire un ruolo selezionando i privilegi di quello specifico ruolo per poi assegnarlo all'utente assegnandogli in questo modo tutti i permessi di quel ruolo contemporaneamente. Un utente pu\u00f2 avere pi\u00f9 ruoli. Per assegnare un ruolo ad un utente \u00e8 necessario recarsi nella sezione User Management / User / $UTENTE e cliccare sul tab Permissions . Dopo di che fare click su Assign Roles e selezionare il ruolo desiderato e cliccare Add Permission","title":"Assegnamento Ruoli"},{"location":"ordini/","text":"Ordini Il concetto chiave di t-order sono gli ordini, un ordine rappresenta un singolo rapporto di vendita verso un cliente. Ogni ordine viene generato come preventivo e segue una serie di passaggi prestabiliti che portano fino alla completa evasione, affiancando gli impiegati dei diversi settori nelle specifiche fasi che li coinvolgono. Note Per convenzione all'interno della documentazione si utilizzer\u00e0 il termine ordine per riferirsi ad un ordine in qualsiasi stato, nel caso in cui fosse necessario riferirsi ad uno specifico stato sar\u00e0 scritto in maiuscolo ORDINE.","title":"Ordini"},{"location":"ordini/#ordini","text":"Il concetto chiave di t-order sono gli ordini, un ordine rappresenta un singolo rapporto di vendita verso un cliente. Ogni ordine viene generato come preventivo e segue una serie di passaggi prestabiliti che portano fino alla completa evasione, affiancando gli impiegati dei diversi settori nelle specifiche fasi che li coinvolgono. Note Per convenzione all'interno della documentazione si utilizzer\u00e0 il termine ordine per riferirsi ad un ordine in qualsiasi stato, nel caso in cui fosse necessario riferirsi ad uno specifico stato sar\u00e0 scritto in maiuscolo ORDINE.","title":"Ordini"},{"location":"ordini/ciclo_ordine/","text":"Ciclo dell'ordine Ogni ordine segue un ciclo specifico che parte dallo stato di preventivo e termina nello stato evaso. Questo ciclo deve avvenire in parallelo alle operazioni fisiche e burocratiche necessarie per completare la consegna dell'ordine. Fasi Il ciclo dell'ordine comprende 5 fasi: Preventivo E' lo stato iniziale di ogni ordine e rappresenta il momento dell'offerta al cliente, permette l'inserimento di molte informazioni mantenendone la maggior parte non obbligatorie. In questo modo \u00e8 possibile creare un preventivo iniziale con le informazioni in possesso per poi integrarle in seguito. Ordine E' il primo stato successivo alla conferma del preventivo, il passaggio a questo stato rappresenta il raggiunto accordo con il cliente sull'ordine e permette di procedere ai passaggi successivi. Per effettuare il passaggio ad ordine \u00e8 necessario inserire buona parte delle informazioni che erano facoltative in fase di preventivo. Gli ordini in questo stato vengono letti dal programma di contabilit\u00e0 che genera l'impegno e modifica lo stato impostandolo ad impegno. Impegno Quando un ordine giunge in questo stato significa che \u00e8 stato generato correttamente l'impegno in contabilit\u00e0 e, dopo i necessari controlli, \u00e8 possibile passare allo stato lavorazione Lavorazione Lo stato in lavorazione indica che \u00e8 in corso la fase di preparazione del materiale e di consegna al cliente. Evaso E' lo stato finale di un ordine, quando un ordine giunge in questo stato significa che il ciclo \u00e8 completato e gli articoli inseriti possono essere sincronizzati con trace e letti dal programma di contabilit\u00e0 per procedere alla generazione della fattura. Passaggi di stato Quando un ordine viene creato si trova in fase di preventivo, nel passaggio agli stati successivi vengono effettuate diverse operazioni che \u00e8 possibile suddividere in 2 categorie: controlli e azioni. I controlli e le azioni vengono effettuati prima del passaggio di stato tramite un middleware inserito nell'endpoint di modifica stato di un ordine. Per ogni ordine viene controllato che lo stato di destinazione non sia uguale allo stato attuale e che sia compatibile con lo stato dell'ordine attuale. Calcolo stati disponibili: switch (ordine.stato) { case 1: if (ordine.deleted) stati_disponibili = [ { status_id: 0, status_loc_desc: \"CANCELLATO\", active: true }, { status_id: 1, status_loc_desc: \"ARCHIVIATO\", active: false }, { status_id: 2, status_loc_desc: \"PREVENTIVO\", active: false }, ]; else stati_disponibili = [ { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, { status_id: 1, status_loc_desc: \"ARCHIVIATO\", active: true }, { status_id: 2, status_loc_desc: \"PREVENTIVO\", active: false }, ]; break; case 2: stati_disponibili = [ { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, { status_id: 1, status_loc_desc: \"ARCHIVIATO\", active: false }, { status_id: 2, status_loc_desc: \"PREVENTIVO\", active: true }, { status_id: 3, status_loc_desc: \"ORDINE\", active: false }, ]; break; case 3: stati_disponibili = [ { status_id: 3, status_loc_desc: \"ORDINE\", active: true }, ]; break; case 5: if (ordine.data_fatturazione == null) stati_disponibili = [ { status_id: 5, status_loc_desc: \"IMPEGNO\", active: true }, { status_id: 6, status_loc_desc: \"LAVORAZIONE\", active: false }, { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, ]; else stati_disponibili = [ { status_id: 5, status_loc_desc: \"IMPEGNO\", active: true }, { status_id: 6, status_loc_desc: \"LAVORAZIONE\", active: false }, ]; break; case 6: if (ordine.data_fatturazione == null) stati_disponibili = [ { status_id: 6, status_loc_desc: \"LAVORAZIONE\", active: true }, { status_id: 7, status_loc_desc: \"EVASO\", active: false }, { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, ]; else stati_disponibili = [ { status_id: 6, status_loc_desc: \"LAVORAZIONE\", active: true }, { status_id: 7, status_loc_desc: \"EVASO\", active: false }, ]; break; case 7: if (ordine.data_fatturazione == null) stati_disponibili = [ { status_id: 7, status_loc_desc: \"EVASO\", active: true }, { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, ]; else stati_disponibili = [ { status_id: 7, status_loc_desc: \"EVASO\", active: true }, ]; break; default: stati_disponibili = []; } Controlli specifici per stato: I controlli e le azioni effettuati in seguito dipendono dallo stato di destinazione dell'ordine, se i controlli o le azioni sollevano un errore il passaggio di stato non viene eseguito \u2192 Preventivo (2) Azioni: Aggiorno la data dell'ordine impostando la data attuale \u2192 Ordine (3) Controlli: Campi obbligatori locale (loc_desc,via,citta,prov,profilo_locale) Campi obbligatori cliente (ragosc,via,cap,citta,provincia,piva) IBAN obbligatorio se pagamento con sdd Note tecniche obbligatorie in base agli articoli inseriti (se c'\u00e8 almeno un articolo con order_note = 1 note_tecniche \u00e8 obbligatorio) Azioni: Aggiorno la data dell'ordine impostando la data attuale Generazione ordine di acconto (se down_payment > 0) Invio mail creazione ordine \u2192 Lavorazione (6) Controlli: ordine non in attesa di pagamento (wait_payment) \u2192 Evaso (7) Controlli: ordine non in attesa di pagamento (wait_payment) sono state inserite le matricole e attivazioni necessarie prg locale obbligatorio id_trace cliente obbligatorio Azioni: Aggiorno la data_evasione dell'ordine con la data attuale Eseguo import ordine in trace (compresi articoli cliente)","title":"Ciclo Ordine"},{"location":"ordini/ciclo_ordine/#ciclo-dellordine","text":"Ogni ordine segue un ciclo specifico che parte dallo stato di preventivo e termina nello stato evaso. Questo ciclo deve avvenire in parallelo alle operazioni fisiche e burocratiche necessarie per completare la consegna dell'ordine.","title":"Ciclo dell'ordine"},{"location":"ordini/ciclo_ordine/#fasi","text":"Il ciclo dell'ordine comprende 5 fasi: Preventivo E' lo stato iniziale di ogni ordine e rappresenta il momento dell'offerta al cliente, permette l'inserimento di molte informazioni mantenendone la maggior parte non obbligatorie. In questo modo \u00e8 possibile creare un preventivo iniziale con le informazioni in possesso per poi integrarle in seguito. Ordine E' il primo stato successivo alla conferma del preventivo, il passaggio a questo stato rappresenta il raggiunto accordo con il cliente sull'ordine e permette di procedere ai passaggi successivi. Per effettuare il passaggio ad ordine \u00e8 necessario inserire buona parte delle informazioni che erano facoltative in fase di preventivo. Gli ordini in questo stato vengono letti dal programma di contabilit\u00e0 che genera l'impegno e modifica lo stato impostandolo ad impegno. Impegno Quando un ordine giunge in questo stato significa che \u00e8 stato generato correttamente l'impegno in contabilit\u00e0 e, dopo i necessari controlli, \u00e8 possibile passare allo stato lavorazione Lavorazione Lo stato in lavorazione indica che \u00e8 in corso la fase di preparazione del materiale e di consegna al cliente. Evaso E' lo stato finale di un ordine, quando un ordine giunge in questo stato significa che il ciclo \u00e8 completato e gli articoli inseriti possono essere sincronizzati con trace e letti dal programma di contabilit\u00e0 per procedere alla generazione della fattura.","title":"Fasi"},{"location":"ordini/ciclo_ordine/#passaggi-di-stato","text":"Quando un ordine viene creato si trova in fase di preventivo, nel passaggio agli stati successivi vengono effettuate diverse operazioni che \u00e8 possibile suddividere in 2 categorie: controlli e azioni. I controlli e le azioni vengono effettuati prima del passaggio di stato tramite un middleware inserito nell'endpoint di modifica stato di un ordine. Per ogni ordine viene controllato che lo stato di destinazione non sia uguale allo stato attuale e che sia compatibile con lo stato dell'ordine attuale. Calcolo stati disponibili: switch (ordine.stato) { case 1: if (ordine.deleted) stati_disponibili = [ { status_id: 0, status_loc_desc: \"CANCELLATO\", active: true }, { status_id: 1, status_loc_desc: \"ARCHIVIATO\", active: false }, { status_id: 2, status_loc_desc: \"PREVENTIVO\", active: false }, ]; else stati_disponibili = [ { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, { status_id: 1, status_loc_desc: \"ARCHIVIATO\", active: true }, { status_id: 2, status_loc_desc: \"PREVENTIVO\", active: false }, ]; break; case 2: stati_disponibili = [ { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, { status_id: 1, status_loc_desc: \"ARCHIVIATO\", active: false }, { status_id: 2, status_loc_desc: \"PREVENTIVO\", active: true }, { status_id: 3, status_loc_desc: \"ORDINE\", active: false }, ]; break; case 3: stati_disponibili = [ { status_id: 3, status_loc_desc: \"ORDINE\", active: true }, ]; break; case 5: if (ordine.data_fatturazione == null) stati_disponibili = [ { status_id: 5, status_loc_desc: \"IMPEGNO\", active: true }, { status_id: 6, status_loc_desc: \"LAVORAZIONE\", active: false }, { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, ]; else stati_disponibili = [ { status_id: 5, status_loc_desc: \"IMPEGNO\", active: true }, { status_id: 6, status_loc_desc: \"LAVORAZIONE\", active: false }, ]; break; case 6: if (ordine.data_fatturazione == null) stati_disponibili = [ { status_id: 6, status_loc_desc: \"LAVORAZIONE\", active: true }, { status_id: 7, status_loc_desc: \"EVASO\", active: false }, { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, ]; else stati_disponibili = [ { status_id: 6, status_loc_desc: \"LAVORAZIONE\", active: true }, { status_id: 7, status_loc_desc: \"EVASO\", active: false }, ]; break; case 7: if (ordine.data_fatturazione == null) stati_disponibili = [ { status_id: 7, status_loc_desc: \"EVASO\", active: true }, { status_id: 0, status_loc_desc: \"CANCELLATO\", active: false }, ]; else stati_disponibili = [ { status_id: 7, status_loc_desc: \"EVASO\", active: true }, ]; break; default: stati_disponibili = []; } Controlli specifici per stato: I controlli e le azioni effettuati in seguito dipendono dallo stato di destinazione dell'ordine, se i controlli o le azioni sollevano un errore il passaggio di stato non viene eseguito \u2192 Preventivo (2) Azioni: Aggiorno la data dell'ordine impostando la data attuale \u2192 Ordine (3) Controlli: Campi obbligatori locale (loc_desc,via,citta,prov,profilo_locale) Campi obbligatori cliente (ragosc,via,cap,citta,provincia,piva) IBAN obbligatorio se pagamento con sdd Note tecniche obbligatorie in base agli articoli inseriti (se c'\u00e8 almeno un articolo con order_note = 1 note_tecniche \u00e8 obbligatorio) Azioni: Aggiorno la data dell'ordine impostando la data attuale Generazione ordine di acconto (se down_payment > 0) Invio mail creazione ordine \u2192 Lavorazione (6) Controlli: ordine non in attesa di pagamento (wait_payment) \u2192 Evaso (7) Controlli: ordine non in attesa di pagamento (wait_payment) sono state inserite le matricole e attivazioni necessarie prg locale obbligatorio id_trace cliente obbligatorio Azioni: Aggiorno la data_evasione dell'ordine con la data attuale Eseguo import ordine in trace (compresi articoli cliente)","title":"Passaggi di stato"},{"location":"ordini/informazioni_ordine/","text":"Informazioni ordine Ad ogni ordine sono associate diverse informazioni, alcune salvate nella tabella ordine e altre salvate in tabelle secondarie. Cliente Ogni ordine deve essere associato ad un cliente, l'associazione con il cliente avviene tramite scrittura dell'id del cliente nel campo cliente della tabella ordine. I clienti vengono sincronizzati bilateralmente con trace. Il passaggio da trace a t-order avviene tramite scrittura nella tabella clienti, nel momento dell'inserimento trace compila il campo id_trace con un identificativo univoco relativo al cliente. Il passaggio da t-order a trace avviene quando l'ordine si trova in fase ORDINE, prima di generare l'impegno infatti trace controlla se il cliente ha il campo trace_id a null e nel caso inserisce il cliente nel suo database e aggiorna il campo trace_id della tabella cliente con il nuovo id. (Vedi documentazione sincronizzazioni per ulteriori informazioni) Locale Ogni ordine pu\u00f2 essere associato ad uno specifico locale di un cliente, l'associazione con il locale avviene tramite scrittura dell'id del locale nel campo locale della tabella ordine. La sincronizzazione con trace avviene nello stesso modo in cui avviene la sincronizzazione dei clienti. (Vedi documentazione sincronizzazioni per ulteriori informazioni) Articoli Ordine Ad ogni ordine sono associati una serie di articoli, salvati nella tabella articolo_ordine. Ogni articolo_ordine possiede una serie di informazioni: ordine \u2192 campo di associazione con l'ordine, contiene l'id dell'ordine di appartenenza articolo \u2192 campo di associazione con l'articolo, contiene l'id dell'articolo quantit\u00e0 prezzo \u2192 il prezzo di partenza pu\u00f2 essere modificato rispetto al prezzo di base dell'articolo sconto \u2192 sconto sull'articolo Ordini con canoni Se il campo has_rid della tabella ordine \u00e8 true significa che l'ordine in questione \u00e8 un ordine con canone e gli unici articoli che possono essere associati sono gli articoli appartenenti ad un gruppo con mth_12 = 1 (mensili). Questi ordini una volta evasi permetteranno di generare dei rinnovi mensili. Sconto sul Totale Oltre agli sconti effettuati sul singolo articolo \u00e8 possibile effettuare uno sconto generale su tutto il carrello, questa informazione viene memorizzata tramite il campo totale della tabella ordine. Matricole e Date di attivazione Per ogni articolo ordine: l'inserimento della matricola \u00e8 obbligatorio se l'articolo corrispondente all'articolo ordine ha need_serial = 1 oppure se ha need_serial_grenke = 1 e l'ordine ha grenke = 1 need_serial == 1 || (need_serial_grenke == 1 && grenke == 1); l'inserimento della data di attivazione \u00e8 obbligatorio se l'articolo corrispondente \u00e8 un articolo di tipo rinnovo (mth_1 = 1 o mth_12 = 1 o mth_24 = 1 o new_year = 1) mth_1 == 1 || mth_12 == 1 || mth_24 == 1 || new_year == 1; Le matricole vengono salvate nella tabella matricola_articolo_ordine e le date di attivazione nella tabella attivazione_articolo_ordine. Dato che la tabella articoli cliente prevede un campo quantit\u00e0 mentre la matricola o data di attivazione \u00e8 da assegnare al singolo articolo le tabelle attivazione_articolo_ordine e matricola_articolo_ordine hanno un campo prg (intero progressivo), utilizzato per riferirsi ad uno spefico oggetto anche quando la quantit\u00e0 \u00e8 maggiore di 1. Fatturazione All'interno dell'ordine \u00e8 necessario inserire una serie di informazioni che saranno utilizzate per la generazione della fattura: Tipo di fatturazione: Per ogni ordine \u00e8 necessario definire un tipo per la fatturazione, i tipi disponibili cambiano in funzione del campo has_rid (ordine con canoni) dell'ordine - se has_rid = 1: - Fatturazione Mensile - Fatturazione Trimestrale - Fatturazione Semestrale - se has_rid = 0: - Singola Fatturazione Fatturazione alternativa: Per ogni ordine \u00e8 possibile definire un secondo cliente al quale intestare la fattura, l'impostazione di un cliente per la fatturazione alternativa avviene tramite scrittura nel campo cliente_fatt_alt dell'id del cliente alternativo. Grenke: Indica un ordine di tipo grenke, questo campo viene impostato a 1 automaticamente quando viene selezionato il cliente grenke. Se questo campo \u00e8 a 1 gli articoli inseriti nell'ordine con need_serial_grenke = 1 avranno bisogno della matricola Acconto Quando un ordine si trova in stato preventivo \u00e8 possibile associare un acconto, l'inserimento di un acconto comporta la creazione di un secondo ordine di acconto nel momento di passaggio dallo stato preventivo allo stato ORDINE. L'inserimento dell'acconto avviene tramite scrittura dei campi down_payment (totale acconto) e down_payment_type (metodo di pagamento). La creazione dell'acconto avviene quando down_payment \u00e8 > 0, in tal caso se down_payment_type non corrisponde ad un metodo di pagamento viene sollevato un errore. L'ordine di acconto viene generato automaticamente nello stato evaso. Pagamento E' necessario associare ad ogni ordine un metodo di pagamento. L'associazione avviene tramite scrittura nel campo pagamento della tabella ordine dell'id del metodo di pagamento. Attesa di pagamento E' possibile bloccare il passaggio di stato di un ordine in attesa del pagamento impostando il campo wait_payment dell'ordine a 1. Informazioni tecniche E' possibile inserire delle informazioni del reparto tecnico all'interno dell'ordine: tecnico \u2192 l'assegnazione di un ordine ad un tecnico prevede l'invio di una mail al tecnico interessato data_consegna note_tecniche Articoli cliente All'interno di un ordine \u00e8 possibile inserire degli articoli che sono gi\u00e0 in possesso del cliente per poter sincronizzare l'informazione con trace. Questi articoli vengono trattati in maniera diversa rispetto agli articolo_ordine e vengono salvati in una tabella dedicata (articolo_cliente_ordine). E' possibile inserire in questa tabella tutti gli articoli appartenenti ad un gruppo con aggiungi_a_cliente = true. Allegati E' possibile allegare ad un ordine diversi file, i file devono essere caricati tramite lo specifico enpoint. PDF E' disponibile uno specifico endpoint che resitituisce un file PDF con una rappresentazione dell'ordine.","title":"Informazioni Ordine"},{"location":"ordini/informazioni_ordine/#informazioni-ordine","text":"Ad ogni ordine sono associate diverse informazioni, alcune salvate nella tabella ordine e altre salvate in tabelle secondarie.","title":"Informazioni ordine"},{"location":"ordini/informazioni_ordine/#cliente","text":"Ogni ordine deve essere associato ad un cliente, l'associazione con il cliente avviene tramite scrittura dell'id del cliente nel campo cliente della tabella ordine. I clienti vengono sincronizzati bilateralmente con trace. Il passaggio da trace a t-order avviene tramite scrittura nella tabella clienti, nel momento dell'inserimento trace compila il campo id_trace con un identificativo univoco relativo al cliente. Il passaggio da t-order a trace avviene quando l'ordine si trova in fase ORDINE, prima di generare l'impegno infatti trace controlla se il cliente ha il campo trace_id a null e nel caso inserisce il cliente nel suo database e aggiorna il campo trace_id della tabella cliente con il nuovo id. (Vedi documentazione sincronizzazioni per ulteriori informazioni)","title":"Cliente"},{"location":"ordini/informazioni_ordine/#locale","text":"Ogni ordine pu\u00f2 essere associato ad uno specifico locale di un cliente, l'associazione con il locale avviene tramite scrittura dell'id del locale nel campo locale della tabella ordine. La sincronizzazione con trace avviene nello stesso modo in cui avviene la sincronizzazione dei clienti. (Vedi documentazione sincronizzazioni per ulteriori informazioni)","title":"Locale"},{"location":"ordini/informazioni_ordine/#articoli-ordine","text":"Ad ogni ordine sono associati una serie di articoli, salvati nella tabella articolo_ordine. Ogni articolo_ordine possiede una serie di informazioni: ordine \u2192 campo di associazione con l'ordine, contiene l'id dell'ordine di appartenenza articolo \u2192 campo di associazione con l'articolo, contiene l'id dell'articolo quantit\u00e0 prezzo \u2192 il prezzo di partenza pu\u00f2 essere modificato rispetto al prezzo di base dell'articolo sconto \u2192 sconto sull'articolo Ordini con canoni Se il campo has_rid della tabella ordine \u00e8 true significa che l'ordine in questione \u00e8 un ordine con canone e gli unici articoli che possono essere associati sono gli articoli appartenenti ad un gruppo con mth_12 = 1 (mensili). Questi ordini una volta evasi permetteranno di generare dei rinnovi mensili. Sconto sul Totale Oltre agli sconti effettuati sul singolo articolo \u00e8 possibile effettuare uno sconto generale su tutto il carrello, questa informazione viene memorizzata tramite il campo totale della tabella ordine. Matricole e Date di attivazione Per ogni articolo ordine: l'inserimento della matricola \u00e8 obbligatorio se l'articolo corrispondente all'articolo ordine ha need_serial = 1 oppure se ha need_serial_grenke = 1 e l'ordine ha grenke = 1 need_serial == 1 || (need_serial_grenke == 1 && grenke == 1); l'inserimento della data di attivazione \u00e8 obbligatorio se l'articolo corrispondente \u00e8 un articolo di tipo rinnovo (mth_1 = 1 o mth_12 = 1 o mth_24 = 1 o new_year = 1) mth_1 == 1 || mth_12 == 1 || mth_24 == 1 || new_year == 1; Le matricole vengono salvate nella tabella matricola_articolo_ordine e le date di attivazione nella tabella attivazione_articolo_ordine. Dato che la tabella articoli cliente prevede un campo quantit\u00e0 mentre la matricola o data di attivazione \u00e8 da assegnare al singolo articolo le tabelle attivazione_articolo_ordine e matricola_articolo_ordine hanno un campo prg (intero progressivo), utilizzato per riferirsi ad uno spefico oggetto anche quando la quantit\u00e0 \u00e8 maggiore di 1.","title":"Articoli Ordine"},{"location":"ordini/informazioni_ordine/#fatturazione","text":"All'interno dell'ordine \u00e8 necessario inserire una serie di informazioni che saranno utilizzate per la generazione della fattura: Tipo di fatturazione: Per ogni ordine \u00e8 necessario definire un tipo per la fatturazione, i tipi disponibili cambiano in funzione del campo has_rid (ordine con canoni) dell'ordine - se has_rid = 1: - Fatturazione Mensile - Fatturazione Trimestrale - Fatturazione Semestrale - se has_rid = 0: - Singola Fatturazione Fatturazione alternativa: Per ogni ordine \u00e8 possibile definire un secondo cliente al quale intestare la fattura, l'impostazione di un cliente per la fatturazione alternativa avviene tramite scrittura nel campo cliente_fatt_alt dell'id del cliente alternativo. Grenke: Indica un ordine di tipo grenke, questo campo viene impostato a 1 automaticamente quando viene selezionato il cliente grenke. Se questo campo \u00e8 a 1 gli articoli inseriti nell'ordine con need_serial_grenke = 1 avranno bisogno della matricola","title":"Fatturazione"},{"location":"ordini/informazioni_ordine/#acconto","text":"Quando un ordine si trova in stato preventivo \u00e8 possibile associare un acconto, l'inserimento di un acconto comporta la creazione di un secondo ordine di acconto nel momento di passaggio dallo stato preventivo allo stato ORDINE. L'inserimento dell'acconto avviene tramite scrittura dei campi down_payment (totale acconto) e down_payment_type (metodo di pagamento). La creazione dell'acconto avviene quando down_payment \u00e8 > 0, in tal caso se down_payment_type non corrisponde ad un metodo di pagamento viene sollevato un errore. L'ordine di acconto viene generato automaticamente nello stato evaso.","title":"Acconto"},{"location":"ordini/informazioni_ordine/#pagamento","text":"E' necessario associare ad ogni ordine un metodo di pagamento. L'associazione avviene tramite scrittura nel campo pagamento della tabella ordine dell'id del metodo di pagamento. Attesa di pagamento E' possibile bloccare il passaggio di stato di un ordine in attesa del pagamento impostando il campo wait_payment dell'ordine a 1.","title":"Pagamento"},{"location":"ordini/informazioni_ordine/#informazioni-tecniche","text":"E' possibile inserire delle informazioni del reparto tecnico all'interno dell'ordine: tecnico \u2192 l'assegnazione di un ordine ad un tecnico prevede l'invio di una mail al tecnico interessato data_consegna note_tecniche","title":"Informazioni tecniche"},{"location":"ordini/informazioni_ordine/#articoli-cliente","text":"All'interno di un ordine \u00e8 possibile inserire degli articoli che sono gi\u00e0 in possesso del cliente per poter sincronizzare l'informazione con trace. Questi articoli vengono trattati in maniera diversa rispetto agli articolo_ordine e vengono salvati in una tabella dedicata (articolo_cliente_ordine). E' possibile inserire in questa tabella tutti gli articoli appartenenti ad un gruppo con aggiungi_a_cliente = true.","title":"Articoli cliente"},{"location":"ordini/informazioni_ordine/#allegati","text":"E' possibile allegare ad un ordine diversi file, i file devono essere caricati tramite lo specifico enpoint.","title":"Allegati"},{"location":"ordini/informazioni_ordine/#pdf","text":"E' disponibile uno specifico endpoint che resitituisce un file PDF con una rappresentazione dell'ordine.","title":"PDF"},{"location":"ordini/tabelle_coinvolte/","text":"Tabelle coinvolte Gli ordini e le informazioni ad essi collegate sono salvate nelle seguenti tabelle: ordine \u2192 contiene tutti gli ordini articolo_ordine \u2192 contiene tutti gli articoli di un ordine attivazione_articolo_ordine \u2192 contiene le date di attivazione relative agli articoli ordine matricola_articolo_ordine \u2192 contiene le matricole relative agli articoli ordine articolo_cliente_ordine \u2192 contiene gli articoli gi\u00e0 in possesso dal cliente inseriti all'interno dell'ordine per l'importazione in trace in fase di evasione","title":"Tabelle Coinvolte"},{"location":"ordini/tabelle_coinvolte/#tabelle-coinvolte","text":"Gli ordini e le informazioni ad essi collegate sono salvate nelle seguenti tabelle: ordine \u2192 contiene tutti gli ordini articolo_ordine \u2192 contiene tutti gli articoli di un ordine attivazione_articolo_ordine \u2192 contiene le date di attivazione relative agli articoli ordine matricola_articolo_ordine \u2192 contiene le matricole relative agli articoli ordine articolo_cliente_ordine \u2192 contiene gli articoli gi\u00e0 in possesso dal cliente inseriti all'interno dell'ordine per l'importazione in trace in fase di evasione","title":"Tabelle coinvolte"},{"location":"rinnovi/","text":"Rinnovi Alcuni degli articoli che \u00e8 possibile all'interno degli ordini sono articoli con fatturazione periodica, per questi articoli \u00e8 necessario gestire anche la fase successiva al completamento dell'ordine: i rinnovi. T-order permette di gestire rinnovi di diverso tipo, in particolare possiamo distinguere due macro sezioni: Annuali / Biennali / 31-12 Mensili / Trimestrali / Semestrali","title":"Rinnovi"},{"location":"rinnovi/#rinnovi","text":"Alcuni degli articoli che \u00e8 possibile all'interno degli ordini sono articoli con fatturazione periodica, per questi articoli \u00e8 necessario gestire anche la fase successiva al completamento dell'ordine: i rinnovi. T-order permette di gestire rinnovi di diverso tipo, in particolare possiamo distinguere due macro sezioni: Annuali / Biennali / 31-12 Mensili / Trimestrali / Semestrali","title":"Rinnovi"},{"location":"rinnovi/annuali-biennali-31-12/","text":"Annuali/Biennali/31-12 I rinnovi Annuali/Biennali sono organizzati in due tabelle: rinnovo e articolo_rinnovo. Ad ogni articolo_rinnovo corrisponde uno ed un solo rinnovo, ad ogni rinnovo (se non \u00e8 completato) corrisponono uno o pi\u00f9 articolo_rinnovo. Gli articoli all'interno dei rinnovi di questo tipo sono gli articoli con mth_12, mth_24 o new_year = 1 Import da t_trace I rinnovi vengono generati tramite import dalla tabella t_trace: Creazione record rinnovi Query di estrazione SELECT t_trace.id as t_trace_id,cus1.id as cliente,cus2.id as cliente_fatt_alt, locale.id as locale, articolo.id as articolo, price,serial_number,installation_date, due_date_maintenance, payment_type FROM [T-ORDER].[db_ordini].t_trace JOIN [T-ORDER].[db_ordini].cliente AS cus1 ON cus1.id_trace = t_trace.customer_id JOIN [T-ORDER].[db_ordini].locale ON locale.piva = cus1.piva AND locale.prg = t_trace.prg_location JOIN [T-ORDER].[db_ordini].articolo ON articolo.id_trace = t_trace.article_id LEFT JOIN [T-ORDER].[db_ordini].cliente AS cus2 ON cus2.id_trace = t_trace.customer_for_billing WHERE (date_import_rinnovi IS NULL) AND due_date_maintenance IS NOT NULL AND trace_id IS NOT NULL AND (deleted IS NULL OR deleted = 0); Raggruppamento per (mese,anno,locale) Inserimento Configurazione rinnovo locale Tutti i rinnovi di un certo locale condividono alcune informazioni: pagamento, fatturazione alternativa, note e tacito rinnovo. Questi dati vengono salvati all'interno della tabella configurazione_rinnovo_locale che prevede un record per ogni locale per il quale sono stati inseriti almeno uno dei campi scritti sopra. Disdetta E' possibile eliminare un articolo da un rinnovo effettuando la disdetta. La disdetta dell'articolo di un rinnovo consiste in: scrittura disdetta della t_deleted { articolo, prezzo, matricola, data_scadenza, data_cancellazione: now(), cliente, locale, motivazione, utente: utente_richiesta, note } invio disdetta a trace (se trace_id != null) { \"deleted\": 1, \"date_import_trace\": null } eliminazione articolo_rinnovo impostazione rinnovo a completato (se non ci sono altri articoli) Inserimento nuovi articoli All'interno di un rinnovo \u00e8 possibile inserire gli articoli che hanno mth _12, mth_24 o new_year = 1. Per la logica di rinnovo di questi articoli vedi rinnovo con trace_id a null . Cambio piano E' possibile effettuare un cambio piano (modifica dell'articolo) con tutti gli articoli appartenenti allo stesso gruppo e con lo stesso tipo di scadenza. E' disponibile uno specifico endpoint che per ogni articolo_rinnovo restituisce i possibili articoli sostituitivi. Per gli articoli inseriti successivamente e quindi non ancora importati in trace la procedura di cambio piano non \u00e8 disponibile, poich\u00e8 il cambio piano in quel caso avviene tramite cancellazione diretta dell'articolo e inserimento id un nuovo articolo. La procedura del cambio piano, dopo i controlli iniziali, varia in base al campo anticipo scadenza: Infatti se il campo anticipo scadenza \u00e8 true significa che oltre a effettuare il cambio dell'articolo \u00e8 necessario portare ad oggi la scadenza dell'articolo. Controlli iniziali: l'articolo rinnovo deve avere trace_id (non deve essere un nuovo articolo) l'articolo selezionato per il cambio deve rientrare nelle opzioni di cambio piano dell'articolo rinnovo l'articolo selezionato per il cambio deve avere id_trace compilato Procedura cambio piano (anticipa = true): Modifico articolo, prezzo, matricola e scadenza (oggi) dell'articolo rinnovo Controllo se esiste gi\u00e0 un rinnovo dello stesso locale nel mese attuale Se non esiste creo un nuovo rinnovo nel mese attuale Inserisco l'articolo all'interno del rinnovo nel mese attuale Invio la modifica dell'articolo, del prezzo, della matricola e della scadenza a trace Se non sono presenti altri articoli_rinnovo imposto il rinnovo a completato Procedura cambio piano (anticipa = false): Modifico articolo, prezzo e matricola dell'articolo rinnovo Invio la modifica dell'articolo, del prezzo e della matricola a trace Metodi di pagamento Il metodo di pagamento, salvato nella configurazione_rinnovo_locale, per questo tipo di rinnovo pu\u00f2 essere uno qualsiasi di quelli disponibili Rinnovo Tutti gli articoli di un rinnovo vengono rinnovati insieme ma \u00e8 comunque necessario analizzare ogni articolo_rinnovo poich\u00e8 possono presentarsi diverse casistiche: Salvataggio storico: Ogni riga della articolo_rinnovo del rinnovo viene copiata nella articolo_rinnovo_storico. Import trace: Il rinnovo viene comunicato a trace tramite la tabella t_trace: Se l'articolo_rinnovo ha il campo trace_id a NULL : Significa che \u00e8 stato inserito manualmente dopo l'ultimo rinnovo, in questo caso viene passato il nuovo articolo a trace tramite un insert nella tabella t_trace con i seguenti campi: { order_type_id:15, customer_for_billing, customer_id, prg_location, article_id, price, serial_number, installation_date: now(), due_date_maintenance, type_billing, payment_type, create_operation (in base all'articolo) } Se l'articolo_rinnovo ha il campo trace_id diverso da NULL : Significa che \u00e8 stato importato dalla t_trace, in questo caso viene effettuato un update sul record della t_trace con trace_id corrispondente: { price, serial_number, due_date_maintenance, date_import_trace: null, (per import in trace) date_import_rinnovi: null (per importare prossimo rinnovo) create_operation (in base all'articolo) } Generazione ordine di rinnovo: Per ogni rinnovo viene generato un ordine: { data:now(), cliente_fatt_alt, cliente, locale, utente, date_insert, tipo: 15, (rinnovo) is_closed: 1, stato: 7, (evaso) pagamento, data_evasione: now(), rinnovo, tipo_fatturazione } Gli articoli del rinnovo vengono raggruppati per id_articolo, sconto e prezzo, aumentando di conseguenza la quantit\u00e0 e poi inseriti nella articolo_ordine associati all'ordine appena creato: { ordine, articolo, prezzo, quantita, sconto } Eliminazione articoli rinnovo Impostazione rinnovo a completato Proposta Tutti gli articoli di un rinnovo con il campo proponi = 1 fanno parte della proposta di rinnovo In base a questo campo viene popolato il pdf di proposta di rinnovo.","title":"Annuali/Biennali/31-12"},{"location":"rinnovi/annuali-biennali-31-12/#annualibiennali31-12","text":"I rinnovi Annuali/Biennali sono organizzati in due tabelle: rinnovo e articolo_rinnovo. Ad ogni articolo_rinnovo corrisponde uno ed un solo rinnovo, ad ogni rinnovo (se non \u00e8 completato) corrisponono uno o pi\u00f9 articolo_rinnovo. Gli articoli all'interno dei rinnovi di questo tipo sono gli articoli con mth_12, mth_24 o new_year = 1","title":"Annuali/Biennali/31-12"},{"location":"rinnovi/annuali-biennali-31-12/#import-da-t_trace","text":"I rinnovi vengono generati tramite import dalla tabella t_trace: Creazione record rinnovi Query di estrazione SELECT t_trace.id as t_trace_id,cus1.id as cliente,cus2.id as cliente_fatt_alt, locale.id as locale, articolo.id as articolo, price,serial_number,installation_date, due_date_maintenance, payment_type FROM [T-ORDER].[db_ordini].t_trace JOIN [T-ORDER].[db_ordini].cliente AS cus1 ON cus1.id_trace = t_trace.customer_id JOIN [T-ORDER].[db_ordini].locale ON locale.piva = cus1.piva AND locale.prg = t_trace.prg_location JOIN [T-ORDER].[db_ordini].articolo ON articolo.id_trace = t_trace.article_id LEFT JOIN [T-ORDER].[db_ordini].cliente AS cus2 ON cus2.id_trace = t_trace.customer_for_billing WHERE (date_import_rinnovi IS NULL) AND due_date_maintenance IS NOT NULL AND trace_id IS NOT NULL AND (deleted IS NULL OR deleted = 0); Raggruppamento per (mese,anno,locale) Inserimento","title":"Import da t_trace"},{"location":"rinnovi/annuali-biennali-31-12/#configurazione-rinnovo-locale","text":"Tutti i rinnovi di un certo locale condividono alcune informazioni: pagamento, fatturazione alternativa, note e tacito rinnovo. Questi dati vengono salvati all'interno della tabella configurazione_rinnovo_locale che prevede un record per ogni locale per il quale sono stati inseriti almeno uno dei campi scritti sopra.","title":"Configurazione rinnovo locale"},{"location":"rinnovi/annuali-biennali-31-12/#disdetta","text":"E' possibile eliminare un articolo da un rinnovo effettuando la disdetta. La disdetta dell'articolo di un rinnovo consiste in: scrittura disdetta della t_deleted { articolo, prezzo, matricola, data_scadenza, data_cancellazione: now(), cliente, locale, motivazione, utente: utente_richiesta, note } invio disdetta a trace (se trace_id != null) { \"deleted\": 1, \"date_import_trace\": null } eliminazione articolo_rinnovo impostazione rinnovo a completato (se non ci sono altri articoli)","title":"Disdetta"},{"location":"rinnovi/annuali-biennali-31-12/#inserimento-nuovi-articoli","text":"All'interno di un rinnovo \u00e8 possibile inserire gli articoli che hanno mth _12, mth_24 o new_year = 1. Per la logica di rinnovo di questi articoli vedi rinnovo con trace_id a null .","title":"Inserimento nuovi articoli"},{"location":"rinnovi/annuali-biennali-31-12/#cambio-piano","text":"E' possibile effettuare un cambio piano (modifica dell'articolo) con tutti gli articoli appartenenti allo stesso gruppo e con lo stesso tipo di scadenza. E' disponibile uno specifico endpoint che per ogni articolo_rinnovo restituisce i possibili articoli sostituitivi. Per gli articoli inseriti successivamente e quindi non ancora importati in trace la procedura di cambio piano non \u00e8 disponibile, poich\u00e8 il cambio piano in quel caso avviene tramite cancellazione diretta dell'articolo e inserimento id un nuovo articolo. La procedura del cambio piano, dopo i controlli iniziali, varia in base al campo anticipo scadenza: Infatti se il campo anticipo scadenza \u00e8 true significa che oltre a effettuare il cambio dell'articolo \u00e8 necessario portare ad oggi la scadenza dell'articolo. Controlli iniziali: l'articolo rinnovo deve avere trace_id (non deve essere un nuovo articolo) l'articolo selezionato per il cambio deve rientrare nelle opzioni di cambio piano dell'articolo rinnovo l'articolo selezionato per il cambio deve avere id_trace compilato Procedura cambio piano (anticipa = true): Modifico articolo, prezzo, matricola e scadenza (oggi) dell'articolo rinnovo Controllo se esiste gi\u00e0 un rinnovo dello stesso locale nel mese attuale Se non esiste creo un nuovo rinnovo nel mese attuale Inserisco l'articolo all'interno del rinnovo nel mese attuale Invio la modifica dell'articolo, del prezzo, della matricola e della scadenza a trace Se non sono presenti altri articoli_rinnovo imposto il rinnovo a completato Procedura cambio piano (anticipa = false): Modifico articolo, prezzo e matricola dell'articolo rinnovo Invio la modifica dell'articolo, del prezzo e della matricola a trace","title":"Cambio piano"},{"location":"rinnovi/annuali-biennali-31-12/#metodi-di-pagamento","text":"Il metodo di pagamento, salvato nella configurazione_rinnovo_locale, per questo tipo di rinnovo pu\u00f2 essere uno qualsiasi di quelli disponibili","title":"Metodi di pagamento"},{"location":"rinnovi/annuali-biennali-31-12/#rinnovo","text":"Tutti gli articoli di un rinnovo vengono rinnovati insieme ma \u00e8 comunque necessario analizzare ogni articolo_rinnovo poich\u00e8 possono presentarsi diverse casistiche: Salvataggio storico: Ogni riga della articolo_rinnovo del rinnovo viene copiata nella articolo_rinnovo_storico. Import trace: Il rinnovo viene comunicato a trace tramite la tabella t_trace: Se l'articolo_rinnovo ha il campo trace_id a NULL : Significa che \u00e8 stato inserito manualmente dopo l'ultimo rinnovo, in questo caso viene passato il nuovo articolo a trace tramite un insert nella tabella t_trace con i seguenti campi: { order_type_id:15, customer_for_billing, customer_id, prg_location, article_id, price, serial_number, installation_date: now(), due_date_maintenance, type_billing, payment_type, create_operation (in base all'articolo) } Se l'articolo_rinnovo ha il campo trace_id diverso da NULL : Significa che \u00e8 stato importato dalla t_trace, in questo caso viene effettuato un update sul record della t_trace con trace_id corrispondente: { price, serial_number, due_date_maintenance, date_import_trace: null, (per import in trace) date_import_rinnovi: null (per importare prossimo rinnovo) create_operation (in base all'articolo) } Generazione ordine di rinnovo: Per ogni rinnovo viene generato un ordine: { data:now(), cliente_fatt_alt, cliente, locale, utente, date_insert, tipo: 15, (rinnovo) is_closed: 1, stato: 7, (evaso) pagamento, data_evasione: now(), rinnovo, tipo_fatturazione } Gli articoli del rinnovo vengono raggruppati per id_articolo, sconto e prezzo, aumentando di conseguenza la quantit\u00e0 e poi inseriti nella articolo_ordine associati all'ordine appena creato: { ordine, articolo, prezzo, quantita, sconto } Eliminazione articoli rinnovo Impostazione rinnovo a completato","title":"Rinnovo"},{"location":"rinnovi/annuali-biennali-31-12/#proposta","text":"Tutti gli articoli di un rinnovo con il campo proponi = 1 fanno parte della proposta di rinnovo In base a questo campo viene popolato il pdf di proposta di rinnovo.","title":"Proposta"},{"location":"rinnovi/mensili-trimestrali-semestrali/","text":"Mensili/Trimestrali/Semestrali I rinnovi mensili sono organizzati in due tabelle: mensile e articolo_mensile. Ad ogni articolo_mensile corrisponde uno ed un solo mensile, ad ogni mensile corrisponono uno o pi\u00f9 articolo_mensile. N.B. A differenza dei rinnovi Annuali/Biennali/31-12 i rinnovi di questo tipo vengono eliminati una volta completati, per questo motivo non devono esistere mensili senza articoli_mensili collegati. Import da trace I rinnovi vengono generati tramite import dalla tabella t_trace. La data di scadenza per ogni nuovo rinnovo \u00e8 il primo giorno del mese successivo all'importazione. Creazione record mensili: Query di estrazione SELECT t_trace.id as id_trace,articolo.id as articolo,t_trace.price as prezzo, t_trace.serial_number as matricola,cus1.id as cliente, cus2.id as cliente_fatt_alt, locale.id as locale,t_trace.type_billing as tipo_fatturazione FROM t_trace JOIN articolo ON articolo.id_trace = t_trace.article_id JOIN cliente as cus1 ON cus1.id_trace = t_trace.customer_id LEFT JOIN cliente as cus2 ON cus2.id_trace = t_trace.customer_for_billing JOIN locale ON locale.piva = cus1.piva AND locale.prg = t_trace.prg_location WHERE articolo.mth_1 = 1 AND deleted <> 1 AND date_import_monthly IS NULL raggruppamento per cliente,locale, e tipo_fatturazione. Importazione Metodo di pagamento Gli unici metodi di pagamento concessi sono quelli restituiti nella sezione canoni dei metodi di pagamento Configurazione mensile locale Tutti i mensili di un certo locale condividono alcune informazioni: pagamento, fatturazione alternativa e note. Questi dati vengono salvati all'interno della tabella configurazione_mensile_locale che prevede un record per ogni locale per il quale sono stati inseriti almeno uno dei campi scritti sopra. Fatturazione per cliente I rinnovi di uno stesso cliente ma con locali diversi, appartenenti allo stesso mese e anno di scadenza possono essere raggruppati in un solo ordine selezionando per i rinnovi desiderati il campo fatturazione per cliente. Vedi sotto come avviene il rinnovo. Rinnovo Il rinnovo avviene contemporaneamente per tutti i rinnovi di un certo mese e anno. Controllo iban: if group_billing = 1 then if cliente.iban != null && cliente.iban != \"\" then return true else return false else if fatt_alternativa != null then if cliente_fatt_alt.iban != null && cliente_fatt_alt.iban != \"\" then return true else return false else if locale.iban != null && locale.iban != \"\" then return true else if cliente.iban != null && cliente.iban != \"\" then return true else return false Controllo metodo di pagamento Se tutti i mensili del mese attuale passano i controlli: Import trace (per ogni mensile): Il rinnovo viene comunicato a trace tramite la tabella t_trace: Se l'articolo_mensile ha il campo trace_id a NULL : Significa che \u00e8 stato inserito manualmente dopo l'ultimo rinnovo - Viene passato il nuovo articolo a trace tramite un insert nella tabella t_trace con i seguenti campi: { order_type_id: 15, customer_for_billing, prg_location, article_id, price, serial_number, installation_date: now(), due_date_maintenance, type_billing, payment_type, create_operation (in base all'articolo) } Viene aggiornato l'articolo mensile con l'id della t_trace del record appena inserito Se l'articolo_rinnovo ha il campo trace_id diverso da NULL : Significa che \u00e8 stato importato dalla t_trace, in questo caso viene effettuato un update sul record della t_trace con trace_id corrispondente: { price, serial_number, due_date_maintenance, date_import_trace: null, (per import in trace) date_import_monthly: now(), (non deve essere reimportato) create_operation: (in base all'articolo) } Generazione ordine di rinnovo Suddivisione fatturazione per cliente i mensili con group_billing = 1 vengono divisi da quelli con group_billing = 0 e raggruppati per id cliente Generazione ordini fatturazione per cliente ?? Sincronizzazione configurazioni locali ?? Generazione ordine: per ogni gruppo di mensili viene generato un ordine utilizzando la configurazione del locale del rinnovo mensile con id pi\u00f9 basso , con i seguenti campi: { data: now(), cliente_fatt_alt, cliente, utente, (chi ha effettuato la richiesta) totale, date_insert, tipo: 15, (rinnovo), is_closed: 1, stato: 7, (evaso) pagamento, data_evasione: now(), mensile, tipo_fatturazione } Generazione articoli ordine: gli articoli mensili di tutti gli articoli del gruppo vengono a loro volta raggruppati per id articolo e prezzo , aumentando la quantit\u00e0 di conseguenza, dopo di che vengono generati gli articoli ordine e associati all'ordine generato in precedenza con i seguenti campi: { ordine, articolo, prezzo, quantita, sconto } descrizione_articolo_ordine: ... ... Generazione ordini per fatturazione classica Generazione ordine: per ogni mensile viene generato un ordine con i seguenti campi: { data: now(), cliente_fatt_alt, cliente, locale, utente, (chi ha effettuato la richiesta) totale, date_insert, tipo: 15, (rinnovo) is_closed: 1, stato: 7, (evaso) pagamento, data_evasione: now(), mensile, tipo_fatturazione } Generazione articoli ordine: gli articoli del mensile vengono raggruppati per id articolo e prezzo , aumentando la quantit\u00e0 di conseguenza e dopo di che associati all'ordine generato in precedenza con i seguenti campi: { ordine, articolo, prezzo, quantita, sconto } descrizione_articolo_ordine: ... ... Aggiornamento mensili (per ogni mensile) Calcolo la nuova data di scadenza del mensile come next_billing + tipo_fatturazione.mesi data.setMonth(data.getMonth() + tipo_fatturazione.mesi); Controllo se esiste gi\u00e0 un mensile per questo tipo di fatturazione, locale, mese e anno: Se esiste sposto gli articoli nel mensile esistente e cancello il mensile vuoto Altrimenti modifico la data di scadenza del mensile con la data calcolata Cambio piano E' possibile effettuare un cambio piano (modifica dell'articolo) con tutti gli articoli appartenenti allo stesso gruppo e con mth_1 = 1; E' disponibile uno specifico endpoint che per ogni articolo_mensile restituisce i possibili articoli sostituitivi. Per gli articoli inseriti successivamente e quindi non ancora importati in trace la procedura di cambio piano non \u00e8 disponibile, poich\u00e8 il cambio piano in quel caso avviene tramite cancellazione diretta dell'articolo e inserimento id un nuovo articolo. Controlli iniziali: l'articolo mensile deve avere trace_id (non deve essere un nuovo articolo) l'articolo selezionato per il cambio deve rientrare nelle opzioni di cambio piano dell'articolo mensile l'articolo selezionato per il cambio deve avere id_trace compilato Procedura cambio piano: Modifico articolo, prezzo e matricola dell'articolo mensile Invio la modifica dell'articolo, del prezzo e della matricola a trace Disdetta E' possibile eliminare un articolo da un mensile effettuando la disdetta. La disdetta dell'articolo di un mensile consiste in: scrittura disdetta nella t_deleted: { articolo, prezzo, matricola, data_scadenza, data_cancellazione: now(), cliente, locale, motivazione, utente: utente_richiesta, note } invio disdetta a trace (se trace_id != null) { \"deleted\": 1, \"date_import_trace\": null } eliminazione dell'articolo mensile eliminazione del mensile (se non ci sono altri articoli)","title":"Mensili/Trimestrali/Semestrali"},{"location":"rinnovi/mensili-trimestrali-semestrali/#mensilitrimestralisemestrali","text":"I rinnovi mensili sono organizzati in due tabelle: mensile e articolo_mensile. Ad ogni articolo_mensile corrisponde uno ed un solo mensile, ad ogni mensile corrisponono uno o pi\u00f9 articolo_mensile. N.B. A differenza dei rinnovi Annuali/Biennali/31-12 i rinnovi di questo tipo vengono eliminati una volta completati, per questo motivo non devono esistere mensili senza articoli_mensili collegati.","title":"Mensili/Trimestrali/Semestrali"},{"location":"rinnovi/mensili-trimestrali-semestrali/#import-da-trace","text":"I rinnovi vengono generati tramite import dalla tabella t_trace. La data di scadenza per ogni nuovo rinnovo \u00e8 il primo giorno del mese successivo all'importazione. Creazione record mensili: Query di estrazione SELECT t_trace.id as id_trace,articolo.id as articolo,t_trace.price as prezzo, t_trace.serial_number as matricola,cus1.id as cliente, cus2.id as cliente_fatt_alt, locale.id as locale,t_trace.type_billing as tipo_fatturazione FROM t_trace JOIN articolo ON articolo.id_trace = t_trace.article_id JOIN cliente as cus1 ON cus1.id_trace = t_trace.customer_id LEFT JOIN cliente as cus2 ON cus2.id_trace = t_trace.customer_for_billing JOIN locale ON locale.piva = cus1.piva AND locale.prg = t_trace.prg_location WHERE articolo.mth_1 = 1 AND deleted <> 1 AND date_import_monthly IS NULL raggruppamento per cliente,locale, e tipo_fatturazione. Importazione","title":"Import da trace"},{"location":"rinnovi/mensili-trimestrali-semestrali/#metodo-di-pagamento","text":"Gli unici metodi di pagamento concessi sono quelli restituiti nella sezione canoni dei metodi di pagamento","title":"Metodo di pagamento"},{"location":"rinnovi/mensili-trimestrali-semestrali/#configurazione-mensile-locale","text":"Tutti i mensili di un certo locale condividono alcune informazioni: pagamento, fatturazione alternativa e note. Questi dati vengono salvati all'interno della tabella configurazione_mensile_locale che prevede un record per ogni locale per il quale sono stati inseriti almeno uno dei campi scritti sopra.","title":"Configurazione mensile locale"},{"location":"rinnovi/mensili-trimestrali-semestrali/#fatturazione-per-cliente","text":"I rinnovi di uno stesso cliente ma con locali diversi, appartenenti allo stesso mese e anno di scadenza possono essere raggruppati in un solo ordine selezionando per i rinnovi desiderati il campo fatturazione per cliente. Vedi sotto come avviene il rinnovo.","title":"Fatturazione per cliente"},{"location":"rinnovi/mensili-trimestrali-semestrali/#rinnovo","text":"Il rinnovo avviene contemporaneamente per tutti i rinnovi di un certo mese e anno. Controllo iban: if group_billing = 1 then if cliente.iban != null && cliente.iban != \"\" then return true else return false else if fatt_alternativa != null then if cliente_fatt_alt.iban != null && cliente_fatt_alt.iban != \"\" then return true else return false else if locale.iban != null && locale.iban != \"\" then return true else if cliente.iban != null && cliente.iban != \"\" then return true else return false Controllo metodo di pagamento Se tutti i mensili del mese attuale passano i controlli: Import trace (per ogni mensile): Il rinnovo viene comunicato a trace tramite la tabella t_trace: Se l'articolo_mensile ha il campo trace_id a NULL : Significa che \u00e8 stato inserito manualmente dopo l'ultimo rinnovo - Viene passato il nuovo articolo a trace tramite un insert nella tabella t_trace con i seguenti campi: { order_type_id: 15, customer_for_billing, prg_location, article_id, price, serial_number, installation_date: now(), due_date_maintenance, type_billing, payment_type, create_operation (in base all'articolo) } Viene aggiornato l'articolo mensile con l'id della t_trace del record appena inserito Se l'articolo_rinnovo ha il campo trace_id diverso da NULL : Significa che \u00e8 stato importato dalla t_trace, in questo caso viene effettuato un update sul record della t_trace con trace_id corrispondente: { price, serial_number, due_date_maintenance, date_import_trace: null, (per import in trace) date_import_monthly: now(), (non deve essere reimportato) create_operation: (in base all'articolo) } Generazione ordine di rinnovo Suddivisione fatturazione per cliente i mensili con group_billing = 1 vengono divisi da quelli con group_billing = 0 e raggruppati per id cliente Generazione ordini fatturazione per cliente ?? Sincronizzazione configurazioni locali ?? Generazione ordine: per ogni gruppo di mensili viene generato un ordine utilizzando la configurazione del locale del rinnovo mensile con id pi\u00f9 basso , con i seguenti campi: { data: now(), cliente_fatt_alt, cliente, utente, (chi ha effettuato la richiesta) totale, date_insert, tipo: 15, (rinnovo), is_closed: 1, stato: 7, (evaso) pagamento, data_evasione: now(), mensile, tipo_fatturazione } Generazione articoli ordine: gli articoli mensili di tutti gli articoli del gruppo vengono a loro volta raggruppati per id articolo e prezzo , aumentando la quantit\u00e0 di conseguenza, dopo di che vengono generati gli articoli ordine e associati all'ordine generato in precedenza con i seguenti campi: { ordine, articolo, prezzo, quantita, sconto } descrizione_articolo_ordine: ... ... Generazione ordini per fatturazione classica Generazione ordine: per ogni mensile viene generato un ordine con i seguenti campi: { data: now(), cliente_fatt_alt, cliente, locale, utente, (chi ha effettuato la richiesta) totale, date_insert, tipo: 15, (rinnovo) is_closed: 1, stato: 7, (evaso) pagamento, data_evasione: now(), mensile, tipo_fatturazione } Generazione articoli ordine: gli articoli del mensile vengono raggruppati per id articolo e prezzo , aumentando la quantit\u00e0 di conseguenza e dopo di che associati all'ordine generato in precedenza con i seguenti campi: { ordine, articolo, prezzo, quantita, sconto } descrizione_articolo_ordine: ... ... Aggiornamento mensili (per ogni mensile) Calcolo la nuova data di scadenza del mensile come next_billing + tipo_fatturazione.mesi data.setMonth(data.getMonth() + tipo_fatturazione.mesi); Controllo se esiste gi\u00e0 un mensile per questo tipo di fatturazione, locale, mese e anno: Se esiste sposto gli articoli nel mensile esistente e cancello il mensile vuoto Altrimenti modifico la data di scadenza del mensile con la data calcolata","title":"Rinnovo"},{"location":"rinnovi/mensili-trimestrali-semestrali/#cambio-piano","text":"E' possibile effettuare un cambio piano (modifica dell'articolo) con tutti gli articoli appartenenti allo stesso gruppo e con mth_1 = 1; E' disponibile uno specifico endpoint che per ogni articolo_mensile restituisce i possibili articoli sostituitivi. Per gli articoli inseriti successivamente e quindi non ancora importati in trace la procedura di cambio piano non \u00e8 disponibile, poich\u00e8 il cambio piano in quel caso avviene tramite cancellazione diretta dell'articolo e inserimento id un nuovo articolo. Controlli iniziali: l'articolo mensile deve avere trace_id (non deve essere un nuovo articolo) l'articolo selezionato per il cambio deve rientrare nelle opzioni di cambio piano dell'articolo mensile l'articolo selezionato per il cambio deve avere id_trace compilato Procedura cambio piano: Modifico articolo, prezzo e matricola dell'articolo mensile Invio la modifica dell'articolo, del prezzo e della matricola a trace","title":"Cambio piano"},{"location":"rinnovi/mensili-trimestrali-semestrali/#disdetta","text":"E' possibile eliminare un articolo da un mensile effettuando la disdetta. La disdetta dell'articolo di un mensile consiste in: scrittura disdetta nella t_deleted: { articolo, prezzo, matricola, data_scadenza, data_cancellazione: now(), cliente, locale, motivazione, utente: utente_richiesta, note } invio disdetta a trace (se trace_id != null) { \"deleted\": 1, \"date_import_trace\": null } eliminazione dell'articolo mensile eliminazione del mensile (se non ci sono altri articoli)","title":"Disdetta"}]}